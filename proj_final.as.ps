%!PS-Adobe-3.0
%%Title: proj_final.as
%%For: João
%%Creator: a2ps version 4.13
%%CreationDate: Fri May 21 06:29:51 2010
%%BoundingBox: 24 24 571 818
%%DocumentData: Clean7Bit
%%Orientation: Landscape
%%Pages: 19
%%PageOrder: Ascend
%%DocumentMedia: A4 595 842 0 () ()
%%DocumentNeededResources: font Courier
%%+ font Courier-Bold
%%+ font Courier-BoldOblique
%%+ font Courier-Oblique
%%+ font Helvetica
%%+ font Helvetica-Bold
%%+ font Symbol
%%+ font Times-Bold
%%+ font Times-Roman
%%DocumentProcessColors: Black 
%%Requirements: Tumble Duplex 
%%DocumentSuppliedResources: procset a2ps-a2ps-hdr
%%+ procset a2ps-black+white-Prolog
%%+ encoding ISO-8859-1Encoding
%%EndComments
/a2psdict 200 dict def
a2psdict begin
%%BeginProlog
%%Copyright: (c) 1988, 89, 90, 91, 92, 93 Miguel Santana
%%Copyright: (c) 1995, 96, 97, 98 Akim Demaille, Miguel Santana
% Check PostScript language level.
/languagelevel where {
  pop /gs_languagelevel languagelevel def
} {
  /gs_languagelevel 1 def
} ifelse

% EPSF import as in the Red Book
/BeginInclude {
  /b4_Inc_state save def    		% Save state for cleanup
  /dict_count countdictstack def	% Count objects on dict stack
  /op_count count 1 sub def		% Count objects on operand stack 
  userdict begin
    0 setgray 0 setlinecap
    1 setlinewidth 0 setlinejoin
    10 setmiterlimit [ ] 0 setdash newpath
    gs_languagelevel 1 ne {
      false setstrokeadjust false setoverprint 
    } if
} bind def

/EndInclude {
  count op_count sub { pos } repeat	% Clean up stacks
  countdictstack dict_count sub { end } repeat
  b4_Inc_state restore
} bind def

/BeginEPSF {
  BeginInclude
  /showpage { } def
} bind def

/EndEPSF {
  EndInclude
} bind def

% Page prefeed
/page_prefeed {         % bool -> -
  statusdict /prefeed known {
    statusdict exch /prefeed exch put
  } {
    pop
  } ifelse
} bind def

/deffont {
  findfont exch scalefont def
} bind def

/reencode_font {
  findfont reencode 2 copy definefont pop def
} bind def

% Function c-show (str => -)
% centers text only according to x axis.
/c-show { 
  dup stringwidth pop
  2 div neg 0 rmoveto
  show
} bind def

% Function l-show (str => -)
% prints texts so that it ends at currentpoint
/l-show {
  dup stringwidth pop neg 
  0 
  rmoveto show
} bind def

% center-fit show (str w => -)
% show centered, and scale currentfont so that the width is less than w
/cfshow {
  exch dup stringwidth pop
  % If the title is too big, try to make it smaller
  3 2 roll 2 copy
  gt
  { % if, i.e. too big
    exch div
    currentfont exch scalefont setfont
  } { % ifelse
    pop pop 
  }
  ifelse
  c-show			% center title
} bind def

% Return the y size of the current font
% - => fontsize
/currentfontsize {
  currentfont /FontMatrix get 3 get 1000 mul
} bind def

% reencode the font
% <encoding-vector> <fontdict> -> <newfontdict>
/reencode { %def
  dup length 5 add dict begin
    { %forall
      1 index /FID ne 
      { def }{ pop pop } ifelse
    } forall
    /Encoding exch def

    % Use the font's bounding box to determine the ascent, descent,
    % and overall height; don't forget that these values have to be
    % transformed using the font's matrix.
    % We use `load' because sometimes BBox is executable, sometimes not.
    % Since we need 4 numbers an not an array avoid BBox from being executed
    /FontBBox load aload pop
    FontMatrix transform /Ascent exch def pop
    FontMatrix transform /Descent exch def pop
    /FontHeight Ascent Descent sub def

    % Define these in case they're not in the FontInfo (also, here
    % they're easier to get to.
    /UnderlinePosition 1 def
    /UnderlineThickness 1 def
    
    % Get the underline position and thickness if they're defined.
    currentdict /FontInfo known {
      FontInfo
      
      dup /UnderlinePosition known {
	dup /UnderlinePosition get
	0 exch FontMatrix transform exch pop
	/UnderlinePosition exch def
      } if
      
      dup /UnderlineThickness known {
	/UnderlineThickness get
	0 exch FontMatrix transform exch pop
	/UnderlineThickness exch def
      } if
      
    } if
    currentdict 
  end 
} bind def

% Function print line number (<string> # -)
/# {
  gsave
    sx cw mul neg 2 div 0 rmoveto
    f# setfont
    c-show
  grestore
} bind def

% -------- Some routines to enlight plain b/w printings ---------

% Underline
% width --
/dounderline {
  currentpoint
  gsave
    moveto
    0 currentfont /Descent get currentfontsize mul rmoveto
    0 rlineto
    stroke
  grestore
} bind def

% Underline a string
% string --
/dounderlinestring {
  stringwidth pop
  dounderline
} bind def

/UL {
  /ul exch store
} bind def

% Draw a box of WIDTH wrt current font
% width --
/dobox {
  currentpoint
  gsave
    newpath
    moveto
    0 currentfont /Descent get currentfontsize mul rmoveto
    dup 0 rlineto
    0 currentfont /FontHeight get currentfontsize mul rlineto
    neg 0 rlineto
    closepath
    stroke
  grestore
} bind def

/BX {
  /bx exch store
} bind def

% Box a string
% string --
/doboxstring {
  stringwidth pop
  dobox
} bind def

%
% ------------- Color routines ---------------
%
/FG /setrgbcolor load def

% Draw the background
% width --
/dobackground {
  currentpoint
  gsave
    newpath
    moveto
    0 currentfont /Descent get currentfontsize mul rmoveto
    dup 0 rlineto
    0 currentfont /FontHeight get currentfontsize mul rlineto
    neg 0 rlineto
    closepath
    bgcolor aload pop setrgbcolor
    fill
  grestore
} bind def

% Draw bg for a string
% string --
/dobackgroundstring {
  stringwidth pop
  dobackground
} bind def


/BG {
  dup /bg exch store
  { mark 4 1 roll ] /bgcolor exch store } if
} bind def


/Show {
  bg { dup dobackgroundstring } if
  ul { dup dounderlinestring } if
  bx { dup doboxstring } if
  show
} bind def

% Function T(ab), jumps to the n-th tabulation in the current line
/T {
  cw mul x0 add
  bg { dup currentpoint pop sub dobackground } if
  ul { dup currentpoint pop sub dounderline } if
  bx { dup currentpoint pop sub dobox } if
  y0 moveto
} bind def

% Function n: move to the next line
/n {
  /y0 y0 bfs sub store
  x0 y0 moveto
} bind def

% Function N: show and move to the next line
/N {
  Show
  /y0 y0 bfs sub store
  x0 y0 moveto
} bind def

/S {
  Show
} bind def

%%BeginResource: procset a2ps-a2ps-hdr 2.0 2
%%Copyright: (c) 1988, 89, 90, 91, 92, 93 Miguel Santana
%%Copyright: (c) 1995, 96, 97, 98 Akim Demaille, Miguel Santana
% Function title: prints page header.
% <ct> <rt> <lt> are passed as argument
/title { 
  % 1. Draw the background
  x v get y v get moveto
  gsave
    0 th 2 div neg rmoveto 
    th setlinewidth
    0.95 setgray
    pw 0 rlineto stroke
  grestore
  % 2. Border it
  gsave
    0.7 setlinewidth
    pw 0 rlineto
    0 th neg rlineto
    pw neg 0 rlineto
    closepath stroke
  grestore
  % stk: ct rt lt
  x v get y v get th sub 1 add moveto
%%IncludeResource: font Helvetica
  fHelvetica fnfs 0.8 mul scalefont setfont
  % 3. The left title
  gsave
    dup stringwidth pop fnfs 0.8 mul add exch % leave space took on stack
    fnfs 0.8 mul hm rmoveto
    show			% left title
  grestore
  exch
  % stk: ct ltw rt
  % 4. the right title
  gsave
    dup stringwidth pop fnfs 0.8 mul add exch % leave space took on stack
    dup
    pw exch stringwidth pop fnfs 0.8 mul add sub
    hm
    rmoveto
    show			% right title
  grestore
  % stk: ct ltw rtw
  % 5. the center title
  gsave
    pw 3 1 roll
    % stk: ct pw ltw rtw
    3 copy 
    % Move to the center of the left room
    sub add 2 div hm rmoveto
    % What is the available space in here?
    add sub fnfs 0.8 mul sub fnfs 0.8 mul sub
    % stk: ct space_left
%%IncludeResource: font Helvetica-Bold
  fHelvetica-Bold fnfs scalefont setfont
    cfshow
  grestore
} bind def

% Function border: prints virtual page border
/border { %def
  gsave				% print four sides
    0 setgray
    x v get y v get moveto
    0.7 setlinewidth		% of the square
    pw 0 rlineto
    0 ph neg rlineto
    pw neg 0 rlineto
    closepath stroke
  grestore
} bind def

% Function water: prints a water mark in background
/water { %def
  gsave
    scx scy moveto rotate
%%IncludeResource: font Times-Bold
  fTimes-Bold 100 scalefont setfont
    .97 setgray
    dup stringwidth pop 2 div neg -50 rmoveto
    show
  grestore
} bind def

% Function rhead: prints the right header
/rhead {  %def
  lx ly moveto
  fHelvetica fnfs 0.8 mul scalefont setfont
  l-show
} bind def

% Function footer (cf rf lf -> -)
/footer {
  fHelvetica fnfs 0.8 mul scalefont setfont
  dx dy moveto
  show

  snx sny moveto
  l-show
  
  fnx fny moveto
  c-show
} bind def
%%EndResource
%%BeginResource: procset a2ps-black+white-Prolog 2.0 1

% Function T(ab), jumps to the n-th tabulation in the current line
/T { 
  cw mul x0 add y0 moveto
} bind def

% Function n: move to the next line
/n { %def
  /y0 y0 bfs sub store
  x0 y0 moveto
} bind def

% Function N: show and move to the next line
/N {
  Show
  /y0 y0 bfs sub store
  x0 y0 moveto
}  bind def

/S {
  Show
} bind def

/p {
  false UL
  false BX
  fCourier bfs scalefont setfont
  Show
} bind def

/sy {
  false UL
  false BX
  fSymbol bfs scalefont setfont
  Show
} bind def

/k {
  false UL
  false BX
  fCourier-Oblique bfs scalefont setfont
  Show
} bind def

/K {
  false UL
  false BX
  fCourier-Bold bfs scalefont setfont
  Show
} bind def

/c {
  false UL
  false BX
  fCourier-Oblique bfs scalefont setfont
  Show
} bind def

/C {
  false UL
  false BX
  fCourier-BoldOblique bfs scalefont setfont
  Show 
} bind def

/l {
  false UL
  false BX
  fHelvetica bfs scalefont setfont
  Show
} bind def

/L {
  false UL
  false BX
  fHelvetica-Bold bfs scalefont setfont
  Show 
} bind def

/str{
  false UL
  false BX
  fTimes-Roman bfs scalefont setfont
  Show
} bind def

/e{
  false UL
  true BX
  fHelvetica-Bold bfs scalefont setfont
  Show
} bind def

%%EndResource
%%EndProlog
%%BeginSetup
%%IncludeResource: font Courier
%%IncludeResource: font Courier-Oblique
%%IncludeResource: font Courier-Bold
%%IncludeResource: font Times-Roman
%%IncludeResource: font Symbol
%%IncludeResource: font Courier-BoldOblique
%%BeginResource: encoding ISO-8859-1Encoding
/ISO-8859-1Encoding [
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef 
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef 
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef 
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef 
/space /exclam /quotedbl /numbersign /dollar /percent /ampersand /quoteright 
/parenleft /parenright /asterisk /plus /comma /minus /period /slash 
/zero /one /two /three /four /five /six /seven 
/eight /nine /colon /semicolon /less /equal /greater /question 
/at /A /B /C /D /E /F /G 
/H /I /J /K /L /M /N /O 
/P /Q /R /S /T /U /V /W 
/X /Y /Z /bracketleft /backslash /bracketright /asciicircum /underscore 
/quoteleft /a /b /c /d /e /f /g 
/h /i /j /k /l /m /n /o 
/p /q /r /s /t /u /v /w 
/x /y /z /braceleft /bar /braceright /asciitilde /.notdef 
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef 
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef 
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef 
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef 
/space /exclamdown /cent /sterling /currency /yen /brokenbar /section 
/dieresis /copyright /ordfeminine /guillemotleft /logicalnot /hyphen /registered /macron 
/degree /plusminus /twosuperior /threesuperior /acute /mu /paragraph /bullet 
/cedilla /onesuperior /ordmasculine /guillemotright /onequarter /onehalf /threequarters /questiondown 
/Agrave /Aacute /Acircumflex /Atilde /Adieresis /Aring /AE /Ccedilla 
/Egrave /Eacute /Ecircumflex /Edieresis /Igrave /Iacute /Icircumflex /Idieresis 
/Eth /Ntilde /Ograve /Oacute /Ocircumflex /Otilde /Odieresis /multiply 
/Oslash /Ugrave /Uacute /Ucircumflex /Udieresis /Yacute /Thorn /germandbls 
/agrave /aacute /acircumflex /atilde /adieresis /aring /ae /ccedilla 
/egrave /eacute /ecircumflex /edieresis /igrave /iacute /icircumflex /idieresis 
/eth /ntilde /ograve /oacute /ocircumflex /otilde /odieresis /divide 
/oslash /ugrave /uacute /ucircumflex /udieresis /yacute /thorn /ydieresis 
] def
%%EndResource
% Initialize page description variables.
/sh 595 def
/sw 842 def
/llx 24 def
/urx 818 def
/ury 571 def
/lly 24 def
/#copies 1 def
%% Pagedevice definitions:
countdictstack
% Push our own mark, since there can be several PS marks pushed depending
% where the failure really occured.
/a2ps_mark
{
%%BeginFeature: *Tumble False
  (<<) cvx exec /Tumble (false) cvx exec (>>) cvx exec setpagedevice
%%EndFeature
%%BeginFeature: *Duplex True
  (<<) cvx exec /Duplex (true) cvx exec (>>) cvx exec setpagedevice
%%EndFeature
} stopped
% My cleartomark
{ /a2ps_mark eq { exit } if } loop
countdictstack exch sub dup 0 gt
{
  { end } repeat
}{
  pop
} ifelse
/th 15.000000 def
/fnfs 11 def
/bfs 8.005733 def
/cw 4.803440 def

% Dictionary for ISO-8859-1 support
/iso1dict 8 dict begin
  /fCourier ISO-8859-1Encoding /Courier reencode_font
  /fCourier-Bold ISO-8859-1Encoding /Courier-Bold reencode_font
  /fCourier-BoldOblique ISO-8859-1Encoding /Courier-BoldOblique reencode_font
  /fCourier-Oblique ISO-8859-1Encoding /Courier-Oblique reencode_font
  /fHelvetica ISO-8859-1Encoding /Helvetica reencode_font
  /fHelvetica-Bold ISO-8859-1Encoding /Helvetica-Bold reencode_font
  /fTimes-Bold ISO-8859-1Encoding /Times-Bold reencode_font
  /fTimes-Roman ISO-8859-1Encoding /Times-Roman reencode_font
currentdict end def
/bgcolor [ 0 0 0 ] def
/bg false def
/ul false def
/bx false def
% The font for line numbering
/f# /Helvetica findfont bfs .6 mul scalefont def
/fSymbol /Symbol findfont def
/hm fnfs 0.25 mul def
/pw
   cw 81.400000 mul
def
/ph
   501.959430 th add
def
/pmw urx llx sub pw 2 mul sub 1 div def
/pmh 0 def
/v 0 def
/x [
  0
  dup pmw add pw add
] def
/y [
  pmh ph add 0 mul ph add
  dup
] def
/scx sw 2 div def
/scy sh 2 div def
/snx urx def
/sny lly 2 add def
/dx llx def
/dy sny def
/fnx scx def
/fny dy def
/lx snx def
/ly ury fnfs 0.8 mul sub def
/sx 0 def
/tab 8 def
/x0 0 def
/y0 0 def
%%EndSetup

%%Page: (1-2) 1
%%BeginPageSetup
/pagesave save def
sh 0 translate 90 rotate
%%EndPageSetup
iso1dict begin
gsave
llx lly 12 add translate
/v 0 store
/x0 x v get 3.362408 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;) c n
(;; ARQUITECTURA DE COMPUTADORES ;;) N
(;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;) N
(;;    2009/2010 - 2 SEMESTRE    ;;) N
(;;           PROJECTO           ;;) N
(;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;) N
(;; 56886 Marco Ferreira         ;;) N
(;; 56978 Joao Lopes             ;;) N
(;; 64787 Joao Neto              ;;) N
(;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;) N
() p n
(;;;;;;;;;;;;;;;;;;;;;;;;;;;;;) c n
(;; Definicao de Constantes ;;) N
(;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;) N
(;;;;;;;;;;) N
() p n
(;; I/O - Janela de Texto) c n
(IO_TEXT_READ) p 16 T () S
(EQU) K
() p 24 T (FFFFh) S 32 T () S
(;; Porto de Leitura) c n
(IO_TEXT_WRITE) p 16 T () S
(EQU) K
() p 24 T (FFFEh) S 32 T () S
(;; Porto de Escrita) c n
(IO_TEXT_STATUS) p 16 T () S
(EQU) K
() p 24 T (FFFDh) S 32 T () S
(;; Porto de Leitura de Estado \(foi escrito algum) c n
( caracter\)) N
(IO_TEXT_CTRL) p 16 T () S
(EQU) K
() p 24 T (FFFCh) S 32 T () S
(;; Porto para alterar a posicao do cursor) c n
(TEXT_ACTIVATE) p 16 T () S
(EQU) K
() p 24 T (FFFFh) S 32 T () S
(;; Valor para activar Janela de Texto) c n
(NEXT_LINE) p 16 T () S
(EQU) K
() p 24 T (0100h) S 32 T () S
(;; Valor a somar para incrementar a linha) c n
() p n
(;; I/O - Interruptores) c n
(IO_SWITCHES) p 16 T () S
(EQU) K
() p 24 T (FFF9h) S 32 T () S
(;; Porto de Leitura do Estado dos Interruptores) c n
() p n
(;; I/O - LEDs) c n
(IO_LEDS) p 8 T () S 16 T () S
(EQU) K
() p 24 T (FFF8h) S 32 T () S
(;; Porto de Escrita de Estado dos LEDs) c n
() p n
(;; I/O - Display de 7 segmentos) c n
(IO_DISP_SEG1) p 16 T () S
(EQU) K
() p 24 T (FFF0h) S 32 T () S
(;; Porto de Escrita do Segmento 1) c n
(IO_DISP_SEG2) p 16 T () S
(EQU) K
() p 24 T (FFF1h) S 32 T () S
(;; Porto de Escrita do Segmento 2) c n
(IO_DISP_SEG3) p 16 T () S
(EQU) K
() p 24 T (FFF2h) S 32 T () S
(;; Porto de Escrita do Segmento 3) c n
(IO_DISP_SEG4) p 16 T () S
(EQU) K
() p 24 T (FFF3h) S 32 T () S
(;; Porto de Escrita do Segmento 4) c n
() p n
(;; I/O - LCD) c n
(IO_LCD_WRITE) p 16 T () S
(EQU) K
() p 24 T (FFF5h) S 32 T () S
(;; Porto para Escrita no LCD) c n
(IO_LCD_CTRL) p 16 T () S
(EQU) K
() p 24 T (FFF4h) S 32 T () S
(;; Porto para alterar a Posicao do Cursor) c n
() p n
(;; I/O - Mascara de Interrupcoes) c n
(IO_) p
(INT) K
(_MASK) p 16 T () S
(EQU) K
() p 24 T (FFFAh) S 32 T () S
(;; Porto para alterar Mascara de Interrupcoes) c n
() p n
(;; I/O - Temporizador) c n
(IO_TIMER_CTRL) p 16 T () S
(EQU) K
() p 24 T (FFF7h) S 32 T () S
(;; Porto de Controlo) c n
(IO_TIMER_VALUE) p 16 T () S
(EQU) K
() p 24 T (FFF6h) S 32 T () S
(;; Porto de Escrita com o valor a contabilizar \() c n
(0.1x\)) N
(TIMER_BASE_TIME) p 16 T () S
(EQU) K
() p 24 T (3) S 32 T () S
(;; 300ms Tempo Base) c n
(TIMER_ENABLE) p 16 T () S
(EQU) K
() p 24 T (1) N
() N
(;; Comboio do Utilizador) c n
(USR_TRAIN_CAR) p 16 T () S
(EQU) K
() p 24 T ('#') S 32 T () S
(;; Carruagem do Utilizador) c n
(USR_TRAIN_LOC) p 16 T () S
(EQU) K
() p 24 T ('O') S 32 T () S
(;; Locomotiva do Utilizador) c n
(USR_TRAIN_LENG) p 16 T () S
(EQU) K
() p 24 T (6) S 32 T () S
(;; Locomotiva + 5 Carruagens) c n
(USR_TRAIN_IDIR) p 16 T () S
(EQU) K
() p 24 T (0100h) S 32 T () S
(;; Direccao Inicial do Comboio \(1, 0\)) c n
(POS_USR_LOC) p 16 T () S
(EQU) K
() p 24 T (1402h) S 32 T () S
(;; Posicao Inicial da Locomotiva) c n
(POS_USR_DIFF) p 16 T () S
(EQU) K
() p 24 T (FF00h) S 32 T () S
(;; \(-100h\) Disposicao Inicial do Comboio \(Vertic) c n
(al p Cima\)) N
() p n
(;; Automotora Fantasma) c n
(AI_TRAIN_CAR) p 16 T () S
(EQU) K
() p 24 T ('o') S 32 T () S
(;; Caracter da Carruagem) c n
(proj_final.as) (Page 1/37) (Mai 21, 10 6:17) title
border
/v 1 store
/x0 x v get 3.362408 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(AI_TRAIN_LOC) p 16 T () S
(EQU) K
() p 24 T ('O') S 32 T () S
(;; Caracter das Locomotivas) c n
(AI_TRAIN_LENG) p 16 T () S
(EQU) K
() p 24 T (6) S 32 T () S
(;; 2 Locomotivas + 4 Carruagens) c n
(AI_TRAIN_IDIR) p 16 T () S
(EQU) K
() p 24 T (FFFFh) S 32 T () S
(;; Direccao Inicial do Comboio \(0, -1\)) c n
(POS_AI_LOC) p 16 T () S
(EQU) K
() p 24 T (062Fh) S 32 T () S
(;; Posicao Inicial da Locomotiva) c n
(POS_AI_DIFF) p 16 T () S
(EQU) K
() p 24 T (0001h) S 32 T () S
(;; Disposicao Inicial da Automotora \(Horizontal ) c n
(p Direita\)) N
(AI_NUM_LOC) p 16 T () S
(EQU) K
() p 24 T (2) S 32 T () S
(;; Numero de Locomotivas na Automotora) c n
() p n
(;; Estacoes) c n
(STATION_CAR) p 16 T () S
(EQU) K
() p 24 T ('=') S 32 T () S
(;; Caracter da Estacao) c n
(STATION_PASSENG) p 16 T () S
(EQU) K
() p 24 T ('&') S 32 T () S
(;; Caracter que representa um Passageiro) c n
(NUM_STATIONS) p 16 T () S
(EQU) K
() p 24 T (4) S 32 T () S
(;; Numero de Estacoes no Cenario) c n
(PASSENGER_FREQ) p 16 T () S
(EQU) K
() p 24 T (50) S 32 T () S
(;; Frequencia com que sao colocados novos passag) c n
(eiros) N
() p n
(;; Posicoes das Estacoes) c n
(POS_STATION1) p 16 T () S
(EQU) K
() p 24 T (030Eh) N
(POS_STATION2) S 16 T () S
(EQU) K
() p 24 T (0A0Eh) N
(POS_STATION3) S 16 T () S
(EQU) K
() p 24 T (120Ch) N
(POS_STATION4) S 16 T () S
(EQU) K
() p 24 T (1723h) N
() N
(;; Tamanhos das Estacoes) c n
(STATION_SIZE1) p 16 T () S
(EQU) K
() p 24 T (8) N
(STATION_SIZE2) S 16 T () S
(EQU) K
() p 24 T (8) N
(STATION_SIZE3) S 16 T () S
(EQU) K
() p 24 T (8) N
(STATION_SIZE4) S 16 T () S
(EQU) K
() p 24 T (10) N
() N
(;; Agulhas) c n
(NEEDLE_CAR_L) p 16 T () S
(EQU) K
() p 24 T ('\\') S 32 T () S
(;; Curva a esquerda \(visto de frente\)) c n
(NEEDLE_CAR_R) p 16 T () S
(EQU) K
() p 24 T ('/') S 32 T () S
(;; Curva a direita \(visto de frente\)) c n
(NEEDLE_CAR_V) p 16 T () S
(EQU) K
() p 24 T ('|') S 32 T () S
(;; Linha vertical) c n
(NEEDLE_CAR_H) p 16 T () S
(EQU) K
() p 24 T ('-') S 32 T () S
(;; Linha horizontal) c n
(NUM_NEEDLES) p 16 T () S
(EQU) K
() p 24 T (10) S 32 T () S
(;; Numero de Agulhas) c n
(NEEDLE_STATES) p 16 T () S
(EQU) K
() p 24 T (4) S 32 T () S
(;; Numero de estados possiveis das agulhas) c n
() p n
(;; Cenario) c n
(NUM_LINES) p 16 T () S
(EQU) K
() p 24 T (24) S 32 T () S
(;; Numero de linhas do cenario) c n
(NUM_COLS) p 16 T () S
(EQU) K
() p 24 T (64) S 32 T () S
(;; Numero de colunas do cenario) c n
() p n
(;; Posicoes das 10 Agulhas) c n
(POS_NEEDLE0) p 16 T () S
(EQU) K
() p 24 T (0321h) N
(POS_NEEDLE1) S 16 T () S
(EQU) K
() p 24 T (0629h) N
(POS_NEEDLE2) S 16 T () S
(EQU) K
() p 24 T (063Eh) N
(POS_NEEDLE3) S 16 T () S
(EQU) K
() p 24 T (0C3Eh) N
(POS_NEEDLE4) S 16 T () S
(EQU) K
() p 24 T (1734h) N
(POS_NEEDLE5) S 16 T () S
(EQU) K
() p 24 T (171Dh) N
(POS_NEEDLE6) S 16 T () S
(EQU) K
() p 24 T (121Dh) N
(POS_NEEDLE7) S 16 T () S
(EQU) K
() p 24 T (0D05h) N
(POS_NEEDLE8) S 16 T () S
(EQU) K
() p 24 T (0A19h) N
(POS_NEEDLE9) S 16 T () S
(EQU) K
() p 24 T (0619h) N
() N
(;; Diversos) c n
(STACK_TOP) p 16 T () S
(EQU) K
() p 24 T (FDFFh) S 32 T () S
(;; Topo da Pilha) c n
(INT) K
(_MASK) p 16 T () S
(EQU) K
() p 24 T (1000001111111111b) N
(RAND_MASK) S 16 T () S
(EQU) K
() p 24 T (8016h) S 32 T () S
(;; Mascara usada na geracao de numeros aleatorio) c n
(s) N
(RAND_INIT) p 16 T () S
(EQU) K
() p 24 T (CAFEh) S 32 T () S
(;; Sequencia aleatoria inicial) c n
(DIGIT_OVERFLOW) p 16 T () S
(EQU) K
() p 24 T (10) N
(END_STRING) S 16 T () S
(EQU) K
() p 24 T ('@') S 32 T () S
(;; Caracter limitador de Fim de String) c n
() p n
(;; Mensagem de Fim de Jogo) c n
(NEW_GAME_KEY) p 16 T () S
(EQU) K
() p 24 T ('n') S 32 T () S
(;; Tecla para Iniciar novo jogo) c n
(proj_final.as) (Page 2/37) (Mai 21, 10 6:17) title
border
grestore
(Printed by Jo\343o) rhead
(proj_final.as) (1/19) (sexta-feira Maio 21, 2010) footer
end % of iso1dict
pagesave restore
showpage
%%Page: (3-4) 2
%%BeginPageSetup
/pagesave save def
sh 0 translate 90 rotate
%%EndPageSetup
iso1dict begin
gsave
llx lly 12 add translate
/v 0 store
/x0 x v get 3.362408 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(END_GAME_POS) p 16 T () S
(EQU) K
() p 24 T (0041h) S 32 T () S
(;; Posicao onde escrever String de fim de jogo \() c n
(L0, C65\)) N
() p n
(;; Boolean ADT) c n
(TRUE) p 8 T () S 16 T () S
(EQU) K
() p 24 T (1) N
(FALSE) S 8 T () S 16 T () S
(EQU) K
() p 24 T (0) N
() N
(;;;;;;;;;;;;;;;;;;;;;;;) c n
(;;   ZONA DE DADOS   ;;) N
(;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;) N
(;;;;;;;;;;) N
() p n
() S 8 T () S 16 T () S
(ORIG) K
() p 24 T (8000h) N
(Test_Temp) S 16 T () S
(WORD) K
() p 24 T (FALSE) S 32 T () S
(;; Verifica se temporizador foi activado) c n
(Pos_Comboio) p 16 T () S
(TAB) K
() p 24 T (USR_TRAIN_LENG) S 40 T () S
(;; Vector com as 6 posicoes do comboio d) c n
(o usr) N
(Pos_Fantasma) p 16 T () S
(TAB) K
() p 24 T (AI_TRAIN_LENG) S 40 T () S
(;; Vector com as 6 posicoes da automotor) c n
(a fant) N
(Dir_Comboio) p 16 T () S
(WORD) K
() p 24 T (0000h) S 32 T () S
(;; Vector velocidade. 8b mais  sig: velocidade v) c n
(ertical) N
(Dir_Fantasma) p 16 T () S
(WORD) K
() p 24 T (0000h) S 32 T () S
(;; Vector velocidade. 8b menos sig: velocidade h) c n
(orizontal) N
(Station_Pos) p 16 T () S
(STR) K
() p 24 T (POS_STATION1, POS_STATION2, POS_STATION3, POS_STATION4) N
(Station_Size) S 16 T () S
(STR) K
() p 24 T (STATION_SIZE1, STATION_SIZE2, STATION_SIZE3, STATION_SIZ) N
(E4) N
(PassengerCheck) S 16 T () S
(WORD) K
() p 24 T (PASSENGER_FREQ) S 40 T () S
(;; Contador de Ciclos ate inserir novo p) c n
(assageiro) N
(Pos_Needle0 ) p 16 T () S
(WORD) K
() p 24 T (POS_NEEDLE0) N
(Pos_Needle1) S 16 T () S
(WORD) K
() p 24 T (POS_NEEDLE1) S 40 T () S
(;; Posicao das agulhas) c n
(Pos_Needle2) p 16 T () S
(WORD) K
() p 24 T (POS_NEEDLE2) S 40 T () S
(;; na janela de texto) c n
(Pos_Needle3) p 16 T () S
(WORD) K
() p 24 T (POS_NEEDLE3) N
(Pos_Needle4) S 16 T () S
(WORD) K
() p 24 T (POS_NEEDLE4) N
(Pos_Needle5) S 16 T () S
(WORD) K
() p 24 T (POS_NEEDLE5) N
(Pos_Needle6) S 16 T () S
(WORD) K
() p 24 T (POS_NEEDLE6) N
(Pos_Needle7) S 16 T () S
(WORD) K
() p 24 T (POS_NEEDLE7) N
(Pos_Needle8) S 16 T () S
(WORD) K
() p 24 T (POS_NEEDLE8) N
(Pos_Needle9) S 16 T () S
(WORD) K
() p 24 T (POS_NEEDLE9) N
(NeedleChanged0) S 16 T () S
(WORD) K
() p 24 T (FALSE) N
(NeedleChanged1) S 16 T () S
(WORD) K
() p 24 T (FALSE) S 32 T () S 40 T () S
(;; Utilizador premiu na tecla para mudar) c n
(NeedleChanged2) p 16 T () S
(WORD) K
() p 24 T (FALSE) S 32 T () S 40 T () S
(;; agulha de estado?) c n
(NeedleChanged3) p 16 T () S
(WORD) K
() p 24 T (FALSE) N
(NeedleChanged4) S 16 T () S
(WORD) K
() p 24 T (FALSE) N
(NeedleChanged5) S 16 T () S
(WORD) K
() p 24 T (FALSE) N
(NeedleChanged6) S 16 T () S
(WORD) K
() p 24 T (FALSE) N
(NeedleChanged7) S 16 T () S
(WORD) K
() p 24 T (FALSE) N
(NeedleChanged8) S 16 T () S
(WORD) K
() p 24 T (FALSE) N
(NeedleChanged9) S 16 T () S
(WORD) K
() p 24 T (FALSE) N
(ScoreCounter1) S 16 T () S
(WORD) K
() p 24 T (0) S 32 T () S
(;; Pontuacao - Unidades) c n
(ScoreCounter2) p 16 T () S
(WORD) K
() p 24 T (0) S 32 T () S
(;; Pontuacao - Dezenas) c n
(ScoreCounter3) p 16 T () S
(WORD) K
() p 24 T (0) S 32 T () S
(;; Pontuacao - Centenas) c n
(ScoreCounter4) p 16 T () S
(WORD) K
() p 24 T (0) S 32 T () S
(;; Pontuacao - Milhares) c n
(RecordScore) p 16 T () S
(WORD) K
() p 24 T (0) S 32 T () S
(;; Pontuacao recorde) c n
(RandNum) p 8 T () S 16 T () S
(WORD) K
() p 24 T (RAND_INIT) N
(GameOver) S 16 T () S
(WORD) K
() p 24 T (FALSE) S 32 T () S
(;; Verifica se se encontra em fim de jogo) c n
(Str_GameArea_01) p 16 T () S
(STR) K
() p 24 T ('---------------------------------\\                     ) N
(         ') N
(Str_GameArea_02) S 16 T () S
(STR) K
() p 24 T ('                                 |                     ) N
(         ') N
(Str_GameArea_03) S 16 T () S
(STR) K
() p 24 T ('                                 |                     ) N
(         ') N
(Str_GameArea_04) S 16 T () S
(STR) K
() p 24 T ('     /--------========---------------------------------) N
(-------\\ ') N
(proj_final.as) (Page 3/37) (Mai 21, 10 6:17) title
border
/v 1 store
/x0 x v get 3.362408 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(Str_GameArea_05) p 16 T () S
(STR) K
() p 24 T ('     |                           0                     ) N
(       | ') N
(Str_GameArea_06) S 16 T () S
(STR) K
() p 24 T ('     |                   9               1             ) N
(       | ') N
(Str_GameArea_07) S 16 T () S
(STR) K
() p 24 T ('     |     --------------/-----------------------------) N
(-------/ ') N
(Str_GameArea_08) S 16 T () S
(STR) K
() p 24 T ('     |                   |               |             ) N
(     2 | ') N
(Str_GameArea_09) S 16 T () S
(STR) K
() p 24 T ('     |                   |               |             ) N
(       | ') N
(Str_GameArea_10) S 16 T () S
(STR) K
() p 24 T ('     |                   |               |             ) N
(       | ') N
(Str_GameArea_11) S 16 T () S
(STR) K
() p 24 T ('     |     /--========---/ 8             |             ) N
(       | ') N
(Str_GameArea_12) S 16 T () S
(STR) K
() p 24 T ('     |     |             |               |             ) N
(       | ') N
(Str_GameArea_13) S 16 T () S
(STR) K
() p 24 T ('     |     |             |               |          /--) N
(-------| ') N
(Str_GameArea_14) S 16 T () S
(STR) K
() p 24 T ('  /--| 7   |             |               |          |  ) N
(     3 | ') N
(Str_GameArea_15) S 16 T () S
(STR) K
() p 24 T ('  |  |     |             |               |          |  ) N
(       | ') N
(Str_GameArea_16) S 16 T () S
(STR) K
() p 24 T ('  |  |     \\-------------/               |          |  ) N
(       | ') N
(Str_GameArea_17) S 16 T () S
(STR) K
() p 24 T ('  |  |                                   |          |  ) N
(       | ') N
(Str_GameArea_18) S 16 T () S
(STR) K
() p 24 T ('  |  |                       6           |          |  ) N
(       | ') N
(Str_GameArea_19) S 16 T () S
(STR) K
() p 24 T ('  |  \\------========---------\\-----------/          |  ) N
(         ') N
(Str_GameArea_20) S 16 T () S
(STR) K
() p 24 T ('  |                          |                      |  ) N
(         ') N
(Str_GameArea_21) S 16 T () S
(STR) K
() p 24 T ('  |                          |                      |  ) N
(         ') N
(Str_GameArea_22) S 16 T () S
(STR) K
() p 24 T ('  |                          |                      |  ) N
(         ') N
(Str_GameArea_23) S 16 T () S
(STR) K
() p 24 T ('  |                        5 |                      | 4) N
(         ') N
(Str_GameArea_24) S 16 T () S
(STR) K
() p 24 T ('  \\--------------------------------==========-------/--) N
(-------- ') N
(Str_NewGame_1) S 16 T () S
(STR) K
() p 24 T ('Prima tecla', END_STRING) N
(Str_NewGame_2) S 16 T () S
(STR) K
() p 24 T (' "', NEW_GAME_KEY, '"  para', END_STRING) N
(Str_NewGame_3) S 16 T () S
(STR) K
() p 24 T (' novo jogo', END_STRING) N
() N
() N
(;;;;;;;;;;;;;;;;;;;;;;;;;;;;) c n
(;; TABELA DE INTERRUPCOES ;;) N
(;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;) N
(;;;;;;;;;;) N
() p 8 T () S 16 T () S
(ORIG) K
() p 24 T (FE00h) N
(Int0) S 8 T () S 16 T () S
(WORD) K
() p 24 T (Int_Needle0) N
(Int1) S 8 T () S 16 T () S
(WORD) K
() p 24 T (Int_Needle1) N
(Int2) S 8 T () S 16 T () S
(WORD) K
() p 24 T (Int_Needle2) N
(Int3) S 8 T () S 16 T () S
(WORD) K
() p 24 T (Int_Needle3) N
(Int4) S 8 T () S 16 T () S
(WORD) K
() p 24 T (Int_Needle4) N
(Int5) S 8 T () S 16 T () S
(WORD) K
() p 24 T (Int_Needle5) N
(Int6) S 8 T () S 16 T () S
(WORD) K
() p 24 T (Int_Needle6) N
(Int7) S 8 T () S 16 T () S
(WORD) K
() p 24 T (Int_Needle7) N
(Int8) S 8 T () S 16 T () S
(WORD) K
() p 24 T (Int_Needle8) N
(Int9) S 8 T () S 16 T () S
(WORD) K
() p 24 T (Int_Needle9) N
(IntA) S 8 T () S 16 T () S
(TAB) K
() p 24 T (1) N
(IntB) S 8 T () S 16 T () S
(TAB) K
() p 24 T (1) N
(proj_final.as) (Page 4/37) (Mai 21, 10 6:17) title
border
grestore
(Printed by Jo\343o) rhead
(proj_final.as) (2/19) (sexta-feira Maio 21, 2010) footer
end % of iso1dict
pagesave restore
showpage
%%Page: (5-6) 3
%%BeginPageSetup
/pagesave save def
sh 0 translate 90 rotate
%%EndPageSetup
iso1dict begin
gsave
llx lly 12 add translate
/v 0 store
/x0 x v get 3.362408 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(IntC) p 8 T () S 16 T () S
(TAB) K
() p 24 T (1) N
(IntD) S 8 T () S 16 T () S
(TAB) K
() p 24 T (1) N
(IntE) S 8 T () S 16 T () S
(TAB) K
() p 24 T (1) N
(IntF) S 8 T () S 16 T () S
(WORD) K
() p 24 T (Int_Timer) N
() N
(;;;;;;;;;;;;;;;;;;;;;;;;;;) c n
(;;  PROGRAMA PRINCIPAL  ;;) N
(;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;) N
(;;;;;;;;;;) N
() p 8 T () S 16 T () S
(ORIG) K
() p 24 T (0000h) N
() N
() N
(Main:) S 8 T () S 16 T () S
(MOV) K
() p 24 T (R7, STACK_TOP) S 40 T () S
(;; Inicializacao do StackPointer) c n
() p 8 T () S 16 T () S
(MOV) K
() p 24 T (SP, R7) N
() S 8 T () S 16 T () S
(MOV) K
() p 24 T (R7, ) S
(INT) K
(_MASK) p n
() S 8 T () S 16 T () S
(MOV) K
() p 24 T (M[IO_) S
(INT) K
(_MASK], R7) p n
() S 8 T () S 16 T () S
(CALL) K
() p 24 T (Initialize) N
(MainLoop:) S 16 T () S
(CALL) K
() p 24 T (NewGame) N
() S 8 T () S 16 T () S
(ENI) K n
() p 8 T () S 16 T () S
(CALL) K
() p 24 T (StartTimer) N
() S 8 T () S 16 T () S
(CALL) K
() p 24 T (MidGame) N
() S 8 T () S 16 T () S
(DSI) K n
() p 8 T () S 16 T () S
(CALL) K
() p 24 T (EndGame) N
() S 8 T () S 16 T () S
(BR) K
() p 24 T (MainLoop) N
() N
(;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;) c n
(;; ROTINAS TRATAMENTO INTERRUPCOES ;;) N
(;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;) N
(;;;;;;;;;;) N
(Int_Needle0:) p 16 T () S
(INC) K
() p 24 T (M[NeedleChanged0]) N
() S 8 T () S 16 T () S
(RTI) K n
() p n
(Int_Needle1:) S 16 T () S
(INC) K
() p 24 T (M[NeedleChanged1]) N
() S 8 T () S 16 T () S
(RTI) K n
() p n
(Int_Needle2:) S 16 T () S
(INC) K
() p 24 T (M[NeedleChanged2]) N
() S 8 T () S 16 T () S
(RTI) K n
() p n
(Int_Needle3:) S 16 T () S
(INC) K
() p 24 T (M[NeedleChanged3]) N
() S 8 T () S 16 T () S
(RTI) K n
() p n
(Int_Needle4:) S 16 T () S
(INC) K
() p 24 T (M[NeedleChanged4]) N
() S 8 T () S 16 T () S
(RTI) K n
() p n
(Int_Needle5:) S 16 T () S
(INC) K
() p 24 T (M[NeedleChanged5]) N
() S 8 T () S 16 T () S
(RTI) K n
() p n
(Int_Needle6:) S 16 T () S
(INC) K
() p 24 T (M[NeedleChanged6]) N
() S 8 T () S 16 T () S
(RTI) K n
() p n
(Int_Needle7:) S 16 T () S
(INC) K
() p 24 T (M[NeedleChanged7]) N
() S 8 T () S 16 T () S
(RTI) K n
() p n
(Int_Needle8:) S 16 T () S
(INC) K
() p 24 T (M[NeedleChanged8]) N
() S 8 T () S 16 T () S
(RTI) K n
() p n
(Int_Needle9:) S 16 T () S
(INC) K
() p 24 T (M[NeedleChanged9]) N
() S 8 T () S 16 T () S
(RTI) K n
() p n
(Int_Timer:) S 16 T () S
(PUSH) K
() p 24 T (R1) N
() S 8 T () S 16 T () S
(INC) K
() p 24 T (M[Test_Temp]) S 40 T () S 48 T () S
(; Permitir proximo ciclo) c n
() p 8 T () S 16 T () S
(MOV) K
() p 24 T (R1, TIMER_BASE_TIME) S 48 T () S
(; Tempo base) c n
(proj_final.as) (Page 5/37) (Mai 21, 10 6:17) title
border
/v 1 store
/x0 x v get 3.362408 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
() p 8 T () S 16 T () S
(ADD) K
() p 24 T (R1, M[IO_SWITCHES]) S 48 T () S
(; Mais switches) c n
() p 8 T () S 16 T () S
(MOV) K
() p 24 T (M[IO_TIMER_VALUE], R1) N
() S 8 T () S 16 T () S
(MOV) K
() p 24 T (R1, TIMER_ENABLE) S 48 T () S
(; Activar temporizador) c n
() p 8 T () S 16 T () S
(MOV) K
() p 24 T (M[IO_TIMER_CTRL], R1) N
() S 8 T () S 16 T () S
(POP) K
() p 24 T (R1) N
() S 8 T () S 16 T () S
(RTI) K n
() p n
(;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;) c n
(;;;;;;;;;;) N
(;;) S 8 T (- RandGen) N
(;; Rotina que gera uma sequencia pseudo-aleatoria de numeros de 16 bits com dist) N
(ribuicao) N
(;; uniforme, com passo de repeticao elevado.) N
(;;) N
(;; Entrad: nenhuma) N
(;; Saidas: nenhuma) N
(;; Efeito: Altera conteudo da posicao de memoria RandNum) N
(;;) N
(RandGen:) p 16 T () S
(PUSH) K
() p 24 T (R1) N
() S 8 T () S 16 T () S
(PUSH) K
() p 24 T (R2) N
() S 8 T () S 16 T () S
(PUSH) K
() p 24 T (R3) N
() S 8 T () S 16 T () S
(MOV) K
() p 24 T (R1, M[RandNum]) N
() S 8 T () S 16 T () S
(MOV) K
() p 24 T (R2, RAND_MASK) N
() S 8 T () S 16 T () S
(MOV) K
() p 24 T (R3, R1) N
() S 8 T () S 16 T () S
(SHR) K
() p 24 T (R3, 1) N
() S 8 T () S 16 T () S
(BR.NC) K
() p 24 T (RandGenElse) N
() S 8 T () S 16 T () S
(XOR) K
() p 24 T (R1, R2) N
(RandGenElse:) S 16 T () S
(ROR) K
() p 24 T (R1, 1) N
() S 8 T () S 16 T () S
(MOV) K
() p 24 T (M[RandNum], R1) N
() S 8 T () S 16 T () S
(POP) K
() p 24 T (R3) N
() S 8 T () S 16 T () S
(POP) K
() p 24 T (R2) N
() S 8 T () S 16 T () S
(POP) K
() p 24 T (R1) N
() S 8 T () S 16 T () S
(RET) K n
() p n
(;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;) c n
(;;;;;;;;;;) N
(;;) S 8 T (- StartTimer) N
(;;) N
(;; Rotina que inicializa o temporizador) N
(;;) N
(;; Entrad: nenhuma) N
(;; Saidas: nenhuma) N
(;; Efeito: Activa o temporizador) N
(;;) N
(StartTimer:) p 16 T () S
(PUSH) K
() p 24 T (R1) N
() S 8 T () S 16 T () S
(MOV) K
() p 24 T (R1, TIMER_BASE_TIME) N
() S 8 T () S 16 T () S
(ADD) K
() p 24 T (R1, M[IO_SWITCHES]) N
() S 8 T () S 16 T () S
(MOV) K
() p 24 T (M[IO_TIMER_VALUE], R1) N
() S 8 T () S 16 T () S
(MOV) K
() p 24 T (R1, TIMER_ENABLE) N
() S 8 T () S 16 T () S
(MOV) K
() p 24 T (M[IO_TIMER_CTRL], R1) N
() S 8 T () S 16 T () S
(POP) K
() p 24 T (R1) N
() S 8 T () S 16 T () S
(RET) K n
() p n
(;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;) c n
(;;;;;;;;;;) N
(;; ) S 8 T (- Initialize) N
(;;) N
(;; Efectua operacoes que preparam para o inicio do jogo.) N
(;; ) N
(;; Entrad: nenhuma) N
(;; Saidas: nenhuma) N
(;; Efeito: Altera Janela de Texto, altera posicoes de memoria \(ver funcao ResetR) N
(proj_final.as) (Page 6/37) (Mai 21, 10 6:17) title
border
grestore
(Printed by Jo\343o) rhead
(proj_final.as) (3/19) (sexta-feira Maio 21, 2010) footer
end % of iso1dict
pagesave restore
showpage
%%Page: (7-8) 4
%%BeginPageSetup
/pagesave save def
sh 0 translate 90 rotate
%%EndPageSetup
iso1dict begin
gsave
llx lly 12 add translate
/v 0 store
/x0 x v get 3.362408 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(ecord\)) c n
(;;) N
(Initialize:) p 16 T () S
(CALL) K
() p 24 T (InitTextWindow) S 40 T () S 48 T () S
(; Inicializar Janela de Texto) c n
() p 8 T () S 16 T () S
(CALL) K
() p 24 T (WriteScenario) S 40 T () S 48 T () S
(; Escrever Cenario de Jogo) c n
() p 8 T () S 16 T () S
(CALL) K
() p 24 T (ResetRecord) S 40 T () S 48 T () S
(; Recorde = 0) c n
() p 8 T () S 16 T () S
(RET) K n
() p n
(;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;) c n
(;;;;;;;;;;) N
(;;) S 8 T (- InitTextWindow) N
(;;) N
(;; Inicializa a Janela de Texto) N
(;;) N
(;; Entrad: nenhuma) N
(;; Saidas: nenhuma) N
(;; Efeito: nenhum) N
(;;) N
(InitTextWindow:) p 16 T () S
(PUSH) K
() p 24 T (R1) N
() S 8 T () S 16 T () S
(MOV) K
() p 24 T (R1, TEXT_ACTIVATE) N
() S 8 T () S 16 T () S
(MOV) K
() p 24 T (M[IO_TEXT_CTRL], R1) N
() S 8 T () S 16 T () S
(POP) K
() p 24 T (R1) N
() S 8 T () S 16 T () S
(RET) K n
() p n
(;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;) c n
(;;;;;;;;;;) N
(;;) S 8 T (- WriteScenario) N
(;;) N
(;; Escreve o cenario de jogo na janela de texto) N
(;;) N
(;; Entrad: nenhuma) N
(;; Saidas: nenhuma) N
(;; Efeito: Altera conteudo na Janela de Texto) N
(;;) N
(WriteScenario:) p 16 T () S
(PUSH) K
() p 24 T (R1) S 32 T () S 40 T () S
(; Endereco da String) c n
() p 8 T () S 16 T () S
(PUSH) K
() p 24 T (R2) S 32 T () S 40 T () S
(; Cursor da Janela de Texto) c n
() p 8 T () S 16 T () S
(PUSH) K
() p 24 T (R3) S 32 T () S 40 T () S
(; Contador de Linhas) c n
() p 8 T () S 16 T () S
(MOV) K
() p 24 T (R1, Str_GameArea_01) N
() S 8 T () S 16 T () S
(MOV) K
() p 24 T (R2, R0) N
() S 8 T () S 16 T () S
(MOV) K
() p 24 T (R3, NUM_LINES) N
(WriteScenarioL:) S 16 T () S
(I2OP) K
() p 24 T (R1, R2) N
() S 8 T () S 16 T () S
(ADD) K
() p 24 T (R1, NUM_COLS) N
() S 8 T () S 16 T () S
(ADD) K
() p 24 T (R2, NEXT_LINE) N
() S 8 T () S 16 T () S
(DEC) K
() p 24 T (R3) N
() S 8 T () S 16 T () S
(BR.NZ) K
() p 24 T (WriteScenarioL) N
() S 8 T () S 16 T () S
(POP) K
() p 24 T (R3) N
() S 8 T () S 16 T () S
(POP) K
() p 24 T (R2) N
() S 8 T () S 16 T () S
(POP) K
() p 24 T (R1) N
() S 8 T () S 16 T () S
(RET) K n
() p n
(;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;) c n
(;;;;;;;;;;) N
(;;) S 8 T (- ResetRecord) N
(;;) N
(;; Coloca o valor da Pontuacao Recorde a zero e actualiza o LCD.) N
(;;) N
(;; Entrad: nenhuma) N
(;; Saidas: nenhuma) N
(;; Efeito: Coloca M[RecordScore] a zero) N
(;;         Coloca posicoes de memoria relativas a pontuacao a zero \(ScoreCounter) N
(N\)) N
(;;         Escreve o valor do Record no LCD) N
(;;         Escreve o valor da pontuacao no Display de 7 Segmentos) N
(proj_final.as) (Page 7/37) (Mai 21, 10 6:17) title
border
/v 1 store
/x0 x v get 3.362408 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(;;) c n
(ResetRecord:) p 16 T () S
(MOV) K
() p 24 T (M[RecordScore], R0) N
() S 8 T () S 16 T () S
(CALL) K
() p 24 T (WriteNewRecord) N
() S 8 T () S 16 T () S
(RET) K n
() p n
(;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;) c n
(;;;;;;;;;;) N
(;;) S 8 T (- ResetScore) N
(;;) N
(;; Coloca o valor da Pontuacao a zero e actualiza o Display de 7 segmentos) N
(;;) N
(;; Entrad: nenhuma) N
(;; Saidas: nenhuma) N
(;; Efeito: Altera posicoes de memoria ScoreCounter1, ScoreCounter2, ScoreCounter) N
(3,) N
(;;        ScoreCounter4.) N
(;;) N
(ResetScore:) p 16 T () S
(MOV) K
() p 24 T (M[ScoreCounter4], R0) N
() S 8 T () S 16 T () S
(MOV) K
() p 24 T (M[ScoreCounter3], R0) N
() S 8 T () S 16 T () S
(MOV) K
() p 24 T (M[ScoreCounter2], R0) N
() S 8 T () S 16 T () S
(MOV) K
() p 24 T (M[ScoreCounter1], R0) N
() S 8 T () S 16 T () S
(CALL) K
() p 24 T (WriteScore) N
() S 8 T () S 16 T () S
(RET) K n
() p n
(;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;) c n
(;;;;;;;;;;) N
(;;) S 8 T (- WriteNewRecord) N
(;;) N
(;; Escreve no LCD a pontuacao actual) N
(;;) N
(;; Entrad: nenhuma) N
(;; Saidas: nenhuma) N
(;; Efeito: Altera LCD) N
(;;) N
(WriteNewRecord:) p 16 T () S
(PUSH) K
() p 24 T (R1) S 32 T () S
(; Cursor LCD) c n
() p 8 T () S 16 T () S
(PUSH) K
() p 24 T (R2) S 32 T () S
(; Algarismo LCD) c n
() p 8 T () S 16 T () S
(PUSH) K
() p 24 T (R3) S 32 T () S
(; Endereco LCD_CTRL) c n
() p 8 T () S 16 T () S
(PUSH) K
() p 24 T (R4) S 32 T () S
(; Endereco LCD_WRITE) c n
() p 8 T () S 16 T () S
(MOV) K
() p 24 T (R3, IO_LCD_CTRL) N
() S 8 T () S 16 T () S
(MOV) K
() p 24 T (R4, IO_LCD_WRITE) N
() S 8 T () S 16 T () S
(MOV) K
() p 24 T (R1, 8000h) S 40 T () S
(; Linha 0 Coluna 0) c n
() p 8 T () S 16 T () S
(MOV) K
() p 24 T (M[R3], R1) S 40 T () S
(; Algarismo dos milhares) c n
() p 8 T () S 16 T () S
(MOV) K
() p 24 T (R2, M[ScoreCounter4]) N
() S 8 T () S 16 T () S
(ADD) K
() p 24 T (R2, '0') N
() S 8 T () S 16 T () S
(MOV) K
() p 24 T (M[R4], R2) N
() S 8 T () S 16 T () S
(INC) K
() p 24 T (R1) S 32 T () S 40 T () S
(; Linha 0 Coluna 1) c n
() p 8 T () S 16 T () S
(MOV) K
() p 24 T (M[R3], R1) S 40 T () S
(; Algarismo das Centenas) c n
() p 8 T () S 16 T () S
(MOV) K
() p 24 T (R2, M[ScoreCounter3]) N
() S 8 T () S 16 T () S
(ADD) K
() p 24 T (R2, '0') N
() S 8 T () S 16 T () S
(MOV) K
() p 24 T (M[R4], R2) N
() S 8 T () S 16 T () S
(INC) K
() p 24 T (R1) S 32 T () S 40 T () S
(; Linha 0 Coluna 2) c n
() p 8 T () S 16 T () S
(MOV) K
() p 24 T (M[R3], R1) S 40 T () S
(; Algarismo das Dezenas) c n
() p 8 T () S 16 T () S
(MOV) K
() p 24 T (R2, M[ScoreCounter2]) N
() S 8 T () S 16 T () S
(ADD) K
() p 24 T (R2, '0') N
() S 8 T () S 16 T () S
(MOV) K
() p 24 T (M[R4], R2) N
() S 8 T () S 16 T () S
(INC) K
() p 24 T (R1) S 32 T () S 40 T () S
(; Linha 0 Coluna 3) c n
() p 8 T () S 16 T () S
(MOV) K
() p 24 T (M[R3], R1) S 40 T () S
(; Algarismo das Unidades) c n
() p 8 T () S 16 T () S
(MOV) K
() p 24 T (R2, M[ScoreCounter1]) N
() S 8 T () S 16 T () S
(ADD) K
() p 24 T (R2, '0') N
() S 8 T () S 16 T () S
(MOV) K
() p 24 T (M[R4], R2) N
() S 8 T () S 16 T () S
(POP) K
() p 24 T (R4) N
() S 8 T () S 16 T () S
(POP) K
() p 24 T (R3) N
(proj_final.as) (Page 8/37) (Mai 21, 10 6:17) title
border
grestore
(Printed by Jo\343o) rhead
(proj_final.as) (4/19) (sexta-feira Maio 21, 2010) footer
end % of iso1dict
pagesave restore
showpage
%%Page: (9-10) 5
%%BeginPageSetup
/pagesave save def
sh 0 translate 90 rotate
%%EndPageSetup
iso1dict begin
gsave
llx lly 12 add translate
/v 0 store
/x0 x v get 3.362408 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
() p 8 T () S 16 T () S
(POP) K
() p 24 T (R2) N
() S 8 T () S 16 T () S
(POP) K
() p 24 T (R1) N
() S 8 T () S 16 T () S
(RET) K n
() p n
(;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;) c n
(;;;;;;;;;;) N
(;;) S 8 T (- WriteScore) N
(;;) N
(;; Escreve no Display de 7 Segmentos a pontuacao actual) N
(;;) N
(;; Entrad: nenhuma) N
(;; Saidas: nenhuma) N
(;; Efeito: Altera Display 7 Segmentos) N
(;;) N
(WriteScore:) p 16 T () S
(PUSH) K
() p 24 T (R1) N
() S 8 T () S 16 T () S
(MOV) K
() p 24 T (R1, M[ScoreCounter1]) S 48 T () S
(; Unidades) c n
() p 8 T () S 16 T () S
(MOV) K
() p 24 T (M[IO_DISP_SEG1], R1) N
() S 8 T () S 16 T () S
(MOV) K
() p 24 T (R1, M[ScoreCounter2]) S 48 T () S
(; Dezenas) c n
() p 8 T () S 16 T () S
(MOV) K
() p 24 T (M[IO_DISP_SEG2], R1) N
() S 8 T () S 16 T () S
(MOV) K
() p 24 T (R1, M[ScoreCounter3]) S 48 T () S
(; Centenas) c n
() p 8 T () S 16 T () S
(MOV) K
() p 24 T (M[IO_DISP_SEG3], R1) N
() S 8 T () S 16 T () S
(MOV) K
() p 24 T (R1, M[ScoreCounter4]) S 48 T () S
(; Milhares) c n
() p 8 T () S 16 T () S
(MOV) K
() p 24 T (M[IO_DISP_SEG4], R1) N
() S 8 T () S 16 T () S
(POP) K
() p 24 T (R1) N
() S 8 T () S 16 T () S
(RET) K n
() p n
(;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;) c n
(;;;;;;;;;;) N
(;;) S 8 T (- NewGame) N
(;;) N
(;; Faz as inicializacoes necessarias para iniciar um novo jogo \(reset ao jogo an) N
(terior\)) N
(;;) N
(;; Entrad: nenhuma) N
(;; Saidas: nenhuma) N
(;; Efeito: Altera Janela de Texto e posicoes de memoria \(ver funcoes ResetUsrTra) N
(in, ) N
(;;        ResetAITrain, ResetScore, ResetStations.) N
(;;) N
(NewGame:) p 16 T () S
(CALL) K
() p 24 T (ResetUsrTrain) N
() S 8 T () S 16 T () S
(CALL) K
() p 24 T (ResetAITrain) N
() S 8 T () S 16 T () S
(CALL) K
() p 24 T (ResetScore) N
() S 8 T () S 16 T () S
(CALL) K
() p 24 T (ResetStations) N
() S 8 T () S 16 T () S
(RET) K n
() p n
(;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;) c n
(;;;;;;;;;;) N
(;;) S 8 T (- ResetUsrTrain) N
(;;) N
(;; Coloca o comboio do utilizador na situacao inicial, apagando-o da sua posicao) N
( actual.) N
(;;) N
(;; Entrad: nenhuma) N
(;; Saidas: nenhuma) N
(;; Efeito: Altera Janela de Texto;) N
(;;         Altera posicoes de memoria Dir_Comboio e vector Pos_Comboio) N
(;;) N
(ResetUsrTrain:) p 16 T () S
(PUSH) K
() p 24 T (R1) N
() S 8 T () S 16 T () S
(PUSH) K
() p 24 T (R2) N
() S 8 T () S 16 T () S
(PUSH) K
() p 24 T (R3) N
() S 8 T () S 16 T () S
(PUSH) K
() p 24 T (R4) N
() S 8 T () S 16 T () S
(CALL) K
() p 24 T (EraseUsrTrain) S 40 T () S 48 T () S
(; Apagar da Janela de Texto) c n
(proj_final.as) (Page 9/37) (Mai 21, 10 6:17) title
border
/v 1 store
/x0 x v get 3.362408 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
() p 8 T () S 16 T () S
(MOV) K
() p 24 T (R1, Pos_Comboio) S 40 T () S 48 T () S
(; Mover para posicao inicial) c n
() p 8 T () S 16 T () S
(MOV) K
() p 24 T (R2, USR_TRAIN_LENG) N
() S 8 T () S 16 T () S
(MOV) K
() p 24 T (R3, POS_USR_LOC) N
() S 8 T () S 16 T () S
(MOV) K
() p 24 T (R4, POS_USR_DIFF) N
(ResetUsrTrain2:) S 16 T () S
(MOV) K
() p 24 T (M[R1], R3) N
() S 8 T () S 16 T () S
(INC) K
() p 24 T (R1) N
() S 8 T () S 16 T () S
(ADD) K
() p 24 T (R3, R4) N
() S 8 T () S 16 T () S
(DEC) K
() p 24 T (R2) N
() S 8 T () S 16 T () S
(BR.NZ) K
() p 24 T (ResetUsrTrain2) N
() S 8 T () S 16 T () S
(MOV) K
() p 24 T (R1, USR_TRAIN_IDIR) S 48 T () S
(; Repor velocidade inicial) c n
() p 8 T () S 16 T () S
(MOV) K
() p 24 T (M[Dir_Comboio], R1) N
() S 8 T () S 16 T () S
(CALL) K
() p 24 T (WriteUsrTrain) S 40 T () S 48 T () S
(; Escrever na Janela de Texto) c n
() p 8 T () S 16 T () S
(POP) K
() p 24 T (R4) N
() S 8 T () S 16 T () S
(POP) K
() p 24 T (R3) N
() S 8 T () S 16 T () S
(POP) K
() p 24 T (R2) N
() S 8 T () S 16 T () S
(POP) K
() p 24 T (R1) N
() S 8 T () S 16 T () S
(RET) K n
() p n
(;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;) c n
(;;;;;;;;;;) N
(;;) S 8 T (- EraseUsrTrain) N
(;;) N
(;; Apaga o comboio do utilizador da Janela de Texto) N
(;;) N
(;; Entrad: nenhuma) N
(;; Saidas: nenhuma) N
(;; Efeito: Altera conteudo da Janela de Texto) N
(;;) N
(EraseUsrTrain:) p 16 T () S
(PUSH) K
() p 24 T (R1) N
() S 8 T () S 16 T () S
(PUSH) K
() p 24 T (R2) N
() S 8 T () S 16 T () S
(MOV) K
() p 24 T (R1, Pos_Comboio) N
() S 8 T () S 16 T () S
(MOV) K
() p 24 T (R2, USR_TRAIN_LENG) N
(EraseUsrTrain1:) S 16 T () S
(PUSH) K
() p 24 T (M[R1]) N
() S 8 T () S 16 T () S
(CALL) K
() p 24 T (RestorePos) N
() S 8 T () S 16 T () S
(INC) K
() p 24 T (R1) N
() S 8 T () S 16 T () S
(DEC) K
() p 24 T (R2) N
() S 8 T () S 16 T () S
(BR.NZ) K
() p 24 T (EraseUsrTrain1) N
() S 8 T () S 16 T () S
(POP) K
() p 24 T (R2) N
() S 8 T () S 16 T () S
(POP) K
() p 24 T (R1) N
() S 8 T () S 16 T () S
(RET) K n
() p n
(;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;) c n
(;;;;;;;;;;) N
(;;) S 8 T (- WriteUsrTrain) N
(;;) N
(;; Escreve o comboio do utilizador na Janela de Texto) N
(;;) N
(;; Entrad: nenhuma) N
(;; Saidas: nenhuma) N
(;; Efeito: Altera conteudo da Janela de Texto) N
(;;) N
(WriteUsrTrain:) p 16 T () S
(PUSH) K
() p 24 T (R1) N
() S 8 T () S 16 T () S
(PUSH) K
() p 24 T (R2) N
() S 8 T () S 16 T () S
(PUSH) K
() p 24 T (R3) N
() S 8 T () S 16 T () S
(PUSH) K
() p 24 T (R4) N
() S 8 T () S 16 T () S
(PUSH) K
() p 24 T (R5) N
() S 8 T () S 16 T () S
(PUSH) K
() p 24 T (R6) N
() S 8 T () S 16 T () S
(PUSH) K
() p 24 T (R7) N
() S 8 T () S 16 T () S
(MOV) K
() p 24 T (R1, Pos_Comboio) S 40 T () S 48 T () S
(; Endereco Posicoes do Comboio) c n
() p 8 T () S 16 T () S
(MOV) K
() p 24 T (R2, USR_TRAIN_LENG) S 48 T () S
(; Comprimento do Comboio) c n
() p 8 T () S 16 T () S
(MOV) K
() p 24 T (R3, IO_TEXT_CTRL) S 48 T () S
(; Endereco IO Porto de Controlo) c n
() p 8 T () S 16 T () S
(MOV) K
() p 24 T (R4, IO_TEXT_WRITE) S 48 T () S
(; Endereco IO Porto de Escrita) c n
(proj_final.as) (Page 10/37) (Mai 21, 10 6:17) title
border
grestore
(Printed by Jo\343o) rhead
(proj_final.as) (5/19) (sexta-feira Maio 21, 2010) footer
end % of iso1dict
pagesave restore
showpage
%%Page: (11-12) 6
%%BeginPageSetup
/pagesave save def
sh 0 translate 90 rotate
%%EndPageSetup
iso1dict begin
gsave
llx lly 12 add translate
/v 0 store
/x0 x v get 3.362408 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
() p 8 T () S 16 T () S
(MOV) K
() p 24 T (R5, USR_TRAIN_CAR) S 48 T () S
(; Caracter das Carruagens) c n
() p 8 T () S 16 T () S
(MOV) K
() p 24 T (R6, USR_TRAIN_LOC) S 48 T () S
(; Caracter da Locomotiva) c n
() p 8 T () S 16 T () S
(MOV) K
() p 24 T (R7, M[R1]) S 40 T () S
(; Escrever Locomotiva) c n
() p 8 T () S 16 T () S
(MOV) K
() p 24 T (M[R3], R7) N
() S 8 T () S 16 T () S
(MOV) K
() p 24 T (M[R4], R6) N
() S 8 T () S 16 T () S
(INC) K
() p 24 T (R1) N
() S 8 T () S 16 T () S
(DEC) K
() p 24 T (R2) N
(WriteUsrTrain1:) S 16 T () S
(MOV) K
() p 24 T (R7, M[R1]) S 40 T () S
(; Escrever Carruagens) c n
() p 8 T () S 16 T () S
(MOV) K
() p 24 T (M[R3], R7) N
() S 8 T () S 16 T () S
(MOV) K
() p 24 T (M[R4], R5) N
() S 8 T () S 16 T () S
(INC) K
() p 24 T (R1) N
() S 8 T () S 16 T () S
(DEC) K
() p 24 T (R2) N
() S 8 T () S 16 T () S
(BR.NZ) K
() p 24 T (WriteUsrTrain1) N
() S 8 T () S 16 T () S
(POP) K
() p 24 T (R7) N
() S 8 T () S 16 T () S
(POP) K
() p 24 T (R6) N
() S 8 T () S 16 T () S
(POP) K
() p 24 T (R5) N
() S 8 T () S 16 T () S
(POP) K
() p 24 T (R4) N
() S 8 T () S 16 T () S
(POP) K
() p 24 T (R3) N
() S 8 T () S 16 T () S
(POP) K
() p 24 T (R2) N
() S 8 T () S 16 T () S
(POP) K
() p 24 T (R1) N
() S 8 T () S 16 T () S
(RET) K n
() p n
(;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;) c n
(;;;;;;;;;;) N
(;;) S 8 T (- ResetAITrain) N
(;;) N
(;; Coloca a automotora fantasma na situacao inicial, apagando-a da sua posicao a) N
(ctual. A) N
(;; velocidade inicial e aleatoria.) N
(;;) N
(;; Entrad: nenhuma) N
(;; Saidas: nenhuma) N
(;; Efeito: Altera conteudo da Janela de Texto;) N
(;;         Altera posicoes de memoria Dir_Fantasma e vector Pos_Fantasma) N
(;;) N
(ResetAITrain:) p 16 T () S
(PUSH) K
() p 24 T (R1) N
() S 8 T () S 16 T () S
(CALL) K
() p 24 T (EraseAITrain) N
() S 8 T () S 16 T () S
(CALL) K
() p 24 T (RandGen) S 32 T () S 40 T () S 48 T () S
(; Decidir direccao inicial) c n
() p 8 T () S 16 T () S
(MOV) K
() p 24 T (R1, M[RandNum]) N
() S 8 T () S 16 T () S
(TEST) K
() p 24 T (R1, 0001h) S 40 T () S
(; Testar bit de menor peso) c n
() p 8 T () S 16 T () S
(CALL.Z) K
() p 24 T (ResetAITrainL) S 40 T () S
(; Caso seja 0, Automotora comeca para a ) c n
(esquerda) N
() p 8 T () S 16 T () S
(TEST) K
() p 24 T (R1, 0001h) N
() S 8 T () S 16 T () S
(CALL.NZ) K
() p 24 T (ResetAITrainR) S 40 T () S
(; Caso seja 1, Automotora comeca para a ) c n
(direita) N
() p 8 T () S 16 T () S
(CALL) K
() p 24 T (WriteAITrain) S 40 T () S
(; Escrever na Janela de Texto) c n
() p 8 T () S 16 T () S
(POP) K
() p 24 T (R1) N
() S 8 T () S 16 T () S
(RET) K n
() p n
(;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;) c n
(;;;;;;;;;;) N
(;;) S 8 T (- ResetAITrainL) N
(;;) N
(;; Rotina Auxiliar a Rotina ResetAITrain) N
(;; Coloca a automotora na situacao inicial, com velocidade inicial para a esquer) N
(da.) N
(;;) N
(;; Entrad: Vector Velocidade Inicial) N
(;; Saidas: nenhuma) N
(;; Efeito: Altera posicao de memoria Dir_Fantasma e vector Pos_Fantasma) N
(;;) N
(ResetAITrainL:) p 16 T () S
(PUSH) K
() p 24 T (R1) N
(proj_final.as) (Page 11/37) (Mai 21, 10 6:17) title
border
/v 1 store
/x0 x v get 3.362408 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
() p 8 T () S 16 T () S
(PUSH) K
() p 24 T (R2) N
() S 8 T () S 16 T () S
(PUSH) K
() p 24 T (R3) N
() S 8 T () S 16 T () S
(PUSH) K
() p 24 T (R4) N
() S 8 T () S 16 T () S
(MOV) K
() p 24 T (R1, Pos_Fantasma) N
() S 8 T () S 16 T () S
(MOV) K
() p 24 T (R2, AI_TRAIN_LENG) N
() S 8 T () S 16 T () S
(MOV) K
() p 24 T (R3, POS_AI_LOC) N
() S 8 T () S 16 T () S
(MOV) K
() p 24 T (R4, POS_AI_DIFF) N
(ResetAITrainL1:) S 16 T () S
(MOV) K
() p 24 T (M[R1], R3) N
() S 8 T () S 16 T () S
(INC) K
() p 24 T (R1) N
() S 8 T () S 16 T () S
(ADD) K
() p 24 T (R3, R4) N
() S 8 T () S 16 T () S
(DEC) K
() p 24 T (R2) N
() S 8 T () S 16 T () S
(BR.NZ) K
() p 24 T (ResetAITrainL1) N
() S 8 T () S 16 T () S
(MOV) K
() p 24 T (R1, AI_TRAIN_IDIR) S 48 T () S
(; Repor velocidade inicial) c n
() p 8 T () S 16 T () S
(MOV) K
() p 24 T (M[Dir_Fantasma], R1) N
() S 8 T () S 16 T () S
(POP) K
() p 24 T (R4) N
() S 8 T () S 16 T () S
(POP) K
() p 24 T (R3) N
() S 8 T () S 16 T () S
(POP) K
() p 24 T (R2) N
() S 8 T () S 16 T () S
(POP) K
() p 24 T (R1) N
() S 8 T () S 16 T () S
(RET) K n
() p n
(;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;) c n
(;;;;;;;;;;) N
(;;) S 8 T (- ResetAITrainR) N
(;;) N
(;; Rotina Auxiliar a Rotina ResetAITrain.) N
(;; Coloca a automotora na situacao inicial, com velocidade inicial para a direit) N
(a.) N
(;;) N
(;; Entrad: nenhuma) N
(;; Saidas: nenhuma) N
(;; Efeito: Altera posicao de memoria Dir_Fantasma e vector Pos_Fantasma) N
(;;) N
(ResetAITrainR:) p 16 T () S
(PUSH) K
() p 24 T (R1) N
() S 8 T () S 16 T () S
(PUSH) K
() p 24 T (R2) N
() S 8 T () S 16 T () S
(PUSH) K
() p 24 T (R3) N
() S 8 T () S 16 T () S
(PUSH) K
() p 24 T (R4) N
() S 8 T () S 16 T () S
(MOV) K
() p 24 T (R1, Pos_Fantasma) N
() S 8 T () S 16 T () S
(MOV) K
() p 24 T (R2, AI_TRAIN_LENG) N
() S 8 T () S 16 T () S
(MOV) K
() p 24 T (R3, POS_AI_LOC) N
() S 8 T () S 16 T () S
(MOV) K
() p 24 T (R4, POS_AI_DIFF) N
() S 8 T () S 16 T () S
(ADD) K
() p 24 T (R1, R2) N
() S 8 T () S 16 T () S
(DEC) K
() p 24 T (R1) N
(ResetAITrainR1:) S 16 T () S
(MOV) K
() p 24 T (M[R1], R3) N
() S 8 T () S 16 T () S
(DEC) K
() p 24 T (R1) N
() S 8 T () S 16 T () S
(ADD) K
() p 24 T (R3, R4) N
() S 8 T () S 16 T () S
(DEC) K
() p 24 T (R2) N
() S 8 T () S 16 T () S
(BR.NZ) K
() p 24 T (ResetAITrainR1) N
() S 8 T () S 16 T () S
(MOV) K
() p 24 T (R1, AI_TRAIN_IDIR) S 48 T () S
(; Repor velocidade inicial) c n
() p 8 T () S 16 T () S
(NEG) K
() p 24 T (R1) N
() S 8 T () S 16 T () S
(MOV) K
() p 24 T (M[Dir_Fantasma], R1) N
() S 8 T () S 16 T () S
(POP) K
() p 24 T (R4) N
() S 8 T () S 16 T () S
(POP) K
() p 24 T (R3) N
() S 8 T () S 16 T () S
(POP) K
() p 24 T (R2) N
() S 8 T () S 16 T () S
(POP) K
() p 24 T (R1) N
() S 8 T () S 16 T () S
(RET) K n
() p n
(;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;) c n
(;;;;;;;;;;) N
(;;) S 8 T (- EraseAITrain) N
(;;) N
(;; Apaga a automotora fantasma da Janela de Texto) N
(;;) N
(proj_final.as) (Page 12/37) (Mai 21, 10 6:17) title
border
grestore
(Printed by Jo\343o) rhead
(proj_final.as) (6/19) (sexta-feira Maio 21, 2010) footer
end % of iso1dict
pagesave restore
showpage
%%Page: (13-14) 7
%%BeginPageSetup
/pagesave save def
sh 0 translate 90 rotate
%%EndPageSetup
iso1dict begin
gsave
llx lly 12 add translate
/v 0 store
/x0 x v get 3.362408 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(;; Entrad: nenhuma) c n
(;; Saidas: nenhuma) N
(;; Efeito: Altera conteudo da Janela de Texto) N
(;;) N
(EraseAITrain:) p 16 T () S
(PUSH) K
() p 24 T (R1) N
() S 8 T () S 16 T () S
(PUSH) K
() p 24 T (R2) N
() S 8 T () S 16 T () S
(MOV) K
() p 24 T (R1, Pos_Fantasma) N
() S 8 T () S 16 T () S
(MOV) K
() p 24 T (R2, AI_TRAIN_LENG) N
(EraseAITrain1:) S 16 T () S
(PUSH) K
() p 24 T (M[R1]) N
() S 8 T () S 16 T () S
(CALL) K
() p 24 T (RestorePos) N
() S 8 T () S 16 T () S
(INC) K
() p 24 T (R1) N
() S 8 T () S 16 T () S
(DEC) K
() p 24 T (R2) N
() S 8 T () S 16 T () S
(BR.NZ) K
() p 24 T (EraseAITrain1) N
() S 8 T () S 16 T () S
(POP) K
() p 24 T (R2) N
() S 8 T () S 16 T () S
(POP) K
() p 24 T (R1) N
() S 8 T () S 16 T () S
(RET) K n
() p n
(;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;) c n
(;;;;;;;;;;) N
(;;) S 8 T (- WriteAITrain) N
(;;) N
(;; Escreve a automotora fantasma na Janela de Texto) N
(;;) N
(;; Entrad: nenhuma) N
(;; Saidas: nenhuma) N
(;; Efeito: Altera conteudo da Janela de Texto) N
(;;) N
(WriteAITrain:) p 16 T () S
(PUSH) K
() p 24 T (R1) N
() S 8 T () S 16 T () S
(PUSH) K
() p 24 T (R2) N
() S 8 T () S 16 T () S
(PUSH) K
() p 24 T (R3) N
() S 8 T () S 16 T () S
(PUSH) K
() p 24 T (R4) N
() S 8 T () S 16 T () S
(PUSH) K
() p 24 T (R5) N
() S 8 T () S 16 T () S
(PUSH) K
() p 24 T (R6) N
() S 8 T () S 16 T () S
(PUSH) K
() p 24 T (R7) N
() S 8 T () S 16 T () S
(MOV) K
() p 24 T (R1, Pos_Fantasma) S 48 T () S
(; Endereco Posicoes da Automotor) c n
(a) N
() p 8 T () S 16 T () S
(MOV) K
() p 24 T (R2, AI_TRAIN_LENG) S 48 T () S
(; Comprimento da Automotora) c n
() p 8 T () S 16 T () S
(MOV) K
() p 24 T (R3, IO_TEXT_CTRL) S 48 T () S
(; Endereco IO Porto de Controlo) c n
() p 8 T () S 16 T () S
(MOV) K
() p 24 T (R4, IO_TEXT_WRITE) S 48 T () S
(; Endereco IO Porto de Escrita) c n
() p 8 T () S 16 T () S
(MOV) K
() p 24 T (R5, AI_TRAIN_CAR) S 48 T () S
(; Caracter das Carruagens) c n
() p 8 T () S 16 T () S
(MOV) K
() p 24 T (R6, AI_TRAIN_LOC) S 48 T () S
(; Caracter das Locomotivas) c n
() p 8 T () S 16 T () S
(MOV) K
() p 24 T (R7, M[R1]) S 40 T () S
(; Escrever Locomotiva da Frente) c n
() p 8 T () S 16 T () S
(MOV) K
() p 24 T (M[R3], R7) N
() S 8 T () S 16 T () S
(MOV) K
() p 24 T (M[R4], R6) N
() S 8 T () S 16 T () S
(INC) K
() p 24 T (R1) N
() S 8 T () S 16 T () S
(SUB) K
() p 24 T (R2, AI_NUM_LOC) S 40 T () S
(; Subtrair numero de carruagens) c n
(WriteAITrain1:) p 16 T () S
(MOV) K
() p 24 T (R7, M[R1]) S 40 T () S
(; Escrever Carruagens) c n
() p 8 T () S 16 T () S
(MOV) K
() p 24 T (M[R3], R7) N
() S 8 T () S 16 T () S
(MOV) K
() p 24 T (M[R4], R5) N
() S 8 T () S 16 T () S
(INC) K
() p 24 T (R1) N
() S 8 T () S 16 T () S
(DEC) K
() p 24 T (R2) N
() S 8 T () S 16 T () S
(BR.NZ) K
() p 24 T (WriteAITrain1) N
() S 8 T () S 16 T () S
(MOV) K
() p 24 T (R7, M[R1]) S 40 T () S
(; Escrever Locomotiva Traseira) c n
() p 8 T () S 16 T () S
(MOV) K
() p 24 T (M[R3], R7) N
() S 8 T () S 16 T () S
(MOV) K
() p 24 T (M[R4], R6) N
() S 8 T () S 16 T () S
(POP) K
() p 24 T (R7) N
() S 8 T () S 16 T () S
(POP) K
() p 24 T (R6) N
() S 8 T () S 16 T () S
(POP) K
() p 24 T (R5) N
() S 8 T () S 16 T () S
(POP) K
() p 24 T (R4) N
() S 8 T () S 16 T () S
(POP) K
() p 24 T (R3) N
() S 8 T () S 16 T () S
(POP) K
() p 24 T (R2) N
() S 8 T () S 16 T () S
(POP) K
() p 24 T (R1) N
(proj_final.as) (Page 13/37) (Mai 21, 10 6:17) title
border
/v 1 store
/x0 x v get 3.362408 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
() p 8 T () S 16 T () S
(RET) K n
() p n
(;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;) c n
(;;;;;;;;;;) N
(;;) S 8 T (- RestorePos) N
(;;) N
(;; Reescreve na Janela de Texto o conteudo original da area de jogo da posicao) N
(;; especificada.) N
(;;) N
(;; Entrad: Pilha - Posicao a restaurar \(Coordenadas J. Texto\)) N
(;; Saidas: nenhuma) N
(;; Efeito: Altera uma posicao da Janela de Texto) N
(;;) N
(RestorePos:) p 16 T () S
(PUSH) K
() p 24 T (R1) S 32 T () S
(; Linha) c n
() p 8 T () S 16 T () S
(PUSH) K
() p 24 T (R2) S 32 T () S
(; Coluna) c n
() p 8 T () S 16 T () S
(PUSH) K
() p 24 T (R3) S 32 T () S
(; Endereco do Caracter) c n
() p 8 T () S 16 T () S
(PUSH) K
() p 24 T (M[SP+5]) N
() S 8 T () S 16 T () S
(CALL) K
() p 24 T (ConvertPos) N
() S 8 T () S 16 T () S
(POP) K
() p 24 T (R3) N
() S 8 T () S 16 T () S
(MOV) K
() p 24 T (R1, M[R3]) S 40 T () S
(; Caracter) c n
() p 8 T () S 16 T () S
(MOV) K
() p 24 T (R2, M[SP+5]) S 40 T () S
(; Posicao a Escrever) c n
() p 8 T () S 16 T () S
(MOV) K
() p 24 T (M[IO_TEXT_CTRL], R2) N
() S 8 T () S 16 T () S
(MOV) K
() p 24 T (M[IO_TEXT_WRITE], R1) N
() S 8 T () S 16 T () S
(POP) K
() p 24 T (R3) N
() S 8 T () S 16 T () S
(POP) K
() p 24 T (R2) N
() S 8 T () S 16 T () S
(POP) K
() p 24 T (R1) N
() S 8 T () S 16 T () S
(RETN) K
() p 24 T (1) N
() N
(;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;) c n
(;;;;;;;;;;) N
(;;) S 8 T (- ReadPos) N
(;;) N
(;; Recebe uma posicao em coordenadas da Janela de Texto e devolve o conteudo do ) N
(cenario) N
(;; nessa posicao \(excluindo comboios\)) N
(;;) N
(;; Entrad: Pilha - Posicao a ler) N
(;; Saidas: Pilha - Conteudo da posicao pedida) N
(;; Efeito: Altera Pilha) N
(;;) N
(ReadPos:) p 16 T () S
(PUSH) K
() p 24 T (R1) N
() S 8 T () S 16 T () S
(PUSH) K
() p 24 T (R2) N
() S 8 T () S 16 T () S
(PUSH) K
() p 24 T (M[SP+4]) N
() S 8 T () S 16 T () S
(CALL) K
() p 24 T (ConvertPos) N
() S 8 T () S 16 T () S
(POP) K
() p 24 T (R2) N
() S 8 T () S 16 T () S
(MOV) K
() p 24 T (R1, M[R2]) N
() S 8 T () S 16 T () S
(MOV) K
() p 24 T (M[SP+4], R1) N
() S 8 T () S 16 T () S
(POP) K
() p 24 T (R2) N
() S 8 T () S 16 T () S
(POP) K
() p 24 T (R1) N
() S 8 T () S 16 T () S
(RET) K n
() p n
(;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;) c n
(;;;;;;;;;;) N
(;;) S 8 T (- IsTrainPos) N
(;;) N
(;; Funcao que recebe uma posicao e devolve TRUE caso esteja algum comboio naquel) N
(a posicao) N
(;; e devolve FALSE caso contrario) N
(;;) N
(;; Entrad: Pilha - Posicao a verificar) N
(;; Saidas: Pilha - Predicado) N
(;; Efeito: Altera Pilha) N
(proj_final.as) (Page 14/37) (Mai 21, 10 6:17) title
border
grestore
(Printed by Jo\343o) rhead
(proj_final.as) (7/19) (sexta-feira Maio 21, 2010) footer
end % of iso1dict
pagesave restore
showpage
%%Page: (15-16) 8
%%BeginPageSetup
/pagesave save def
sh 0 translate 90 rotate
%%EndPageSetup
iso1dict begin
gsave
llx lly 12 add translate
/v 0 store
/x0 x v get 3.362408 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(;;) c n
(IsTrainPos:) p 16 T () S
(PUSH) K
() p 24 T (R1) N
() S 8 T () S 16 T () S
(PUSH) K
() p 24 T (R2) N
() S 8 T () S 16 T () S
(MOV) K
() p 24 T (R1, M[SP+4]) N
() S 8 T () S 16 T () S
(PUSH) K
() p 24 T (R1) S 32 T () S 40 T () S
(; Verificar se coincide Comboio Utilizad) c n
(or) N
() p 8 T () S 16 T () S
(CALL) K
() p 24 T (IsTrainPosUsr) N
() S 8 T () S 16 T () S
(POP) K
() p 24 T (R2) N
() S 8 T () S 16 T () S
(CMP) K
() p 24 T (R2, TRUE) N
() S 8 T () S 16 T () S
(BR.Z) K
() p 24 T (IsTrainPosEnd) N
() S 8 T () S 16 T () S
(PUSH) K
() p 24 T (R1) N
() S 8 T () S 16 T () S
(CALL) K
() p 24 T (IsTrainPosAI) N
() S 8 T () S 16 T () S
(POP) K
() p 24 T (R2) N
(IsTrainPosEnd:) S 16 T () S
(MOV) K
() p 24 T (M[SP+4], R2) N
() S 8 T () S 16 T () S
(POP) K
() p 24 T (R2) N
() S 8 T () S 16 T () S
(POP) K
() p 24 T (R1) N
() S 8 T () S 16 T () S
(RET) K n
() p n
(;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;) c n
(;;;;;;;;;;) N
(;;) S 8 T (- ConvertPos) N
(;;) N
(;; Funcao que recebe uma posicao em coordenadas da janela de texto, e devolve a ) N
(posicao) N
(;; de memoria correspondente aquela posicao da Area de Jogo) N
(;;) N
(;; Entrad: Pilha - Posicao em Coord Janela Texto) N
(;; Saidas: Pilha - Posicao da Area de Jogo) N
(;; Efeito: Altera Pilha) N
(;;) N
(ConvertPos:) p 16 T () S
(PUSH) K
() p 24 T (R1) S 32 T () S 40 T () S
(; Coluna) c n
() p 8 T () S 16 T () S
(PUSH) K
() p 24 T (R2) S 32 T () S 40 T () S
(; Linha) c n
() p 8 T () S 16 T () S
(PUSH) K
() p 24 T (R3) S 32 T () S 40 T () S
(; Resultado) c n
() p 8 T () S 16 T () S
(MOV) K
() p 24 T (R1, M[SP+5]) N
() S 8 T () S 16 T () S
(MVBH) K
() p 24 T (R2, R1) S 32 T () S 40 T () S
(; Obter componente Linha) c n
() p 8 T () S 16 T () S
(SHR) K
() p 24 T (R2, 8) N
() S 8 T () S 16 T () S
(AND) K
() p 24 T (R1, 00FFh) S 40 T () S
(; Apagar componente Linha do R1) c n
() p 8 T () S 16 T () S
(MOV) K
() p 24 T (R3, NUM_COLS) N
() S 8 T () S 16 T () S
(MUL) K
() p 24 T (R2, R3) N
() S 8 T () S 16 T () S
(ADD) K
() p 24 T (R3, R1) N
() S 8 T () S 16 T () S
(ADD) K
() p 24 T (R3, Str_GameArea_01) N
() S 8 T () S 16 T () S
(MOV) K
() p 24 T (M[SP+5], R3) N
() S 8 T () S 16 T () S
(POP) K
() p 24 T (R3) N
() S 8 T () S 16 T () S
(POP) K
() p 24 T (R2) N
() S 8 T () S 16 T () S
(POP) K
() p 24 T (R1) N
() S 8 T () S 16 T () S
(RET) K n
() p n
(;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;) c n
(;;;;;;;;;;) N
(;;) S 8 T (- IsTrainPosUsr) N
(;;) N
(;; Funcao que recebe uma posicao e devolve TRUE caso coincida com uma posicao oc) N
(upada) N
(;; pelo comboio do utilizador) N
(;;) N
(;; Entrad: Pilha - Posicao a verificar) N
(;; Saidas: Pilha - Predicado) N
(;; Efeito: Altera Pilha) N
(;;) N
(IsTrainPosUsr:) p 16 T () S
(PUSH) K
() p 24 T (R1) N
() S 8 T () S 16 T () S
(PUSH) K
() p 24 T (R2) N
() S 8 T () S 16 T () S
(PUSH) K
() p 24 T (R3) N
(proj_final.as) (Page 15/37) (Mai 21, 10 6:17) title
border
/v 1 store
/x0 x v get 3.362408 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
() p 8 T () S 16 T () S
(MOV) K
() p 24 T (R1, Pos_Comboio) S 40 T () S 48 T () S
(; Verificar Posicao a Posicao) c n
() p 8 T () S 16 T () S
(MOV) K
() p 24 T (R2, USR_TRAIN_LENG) N
(IsTrainPosUsr1:) S 16 T () S
(MOV) K
() p 24 T (R3, M[R1]) N
() S 8 T () S 16 T () S
(CMP) K
() p 24 T (R3, M[SP+5]) N
() S 8 T () S 16 T () S
(BR.Z) K
() p 24 T (IsTrainPosUsrT) S 40 T () S 48 T () S
(; Caso coincida, TRUE) c n
() p 8 T () S 16 T () S
(INC) K
() p 24 T (R1) N
() S 8 T () S 16 T () S
(DEC) K
() p 24 T (R2) N
() S 8 T () S 16 T () S
(BR.NZ) K
() p 24 T (IsTrainPosUsr1) N
() S 8 T () S 16 T () S
(BR) K
() p 24 T (IsTrainPosUsrF) S 40 T () S 48 T () S
(; Caso nenhuma coincida, FALSE) c n
(IsTrainPosUsrT:) p 16 T () S
(MOV) K
() p 24 T (R3, TRUE) N
() S 8 T () S 16 T () S
(BR.Z) K
() p 24 T (IsTrainPosUsrE) N
(IsTrainPosUsrF:) S 16 T () S
(MOV) K
() p 24 T (R3, FALSE) N
(IsTrainPosUsrE:) S 16 T () S
(MOV) K
() p 24 T (M[SP+5], R3) N
() S 8 T () S 16 T () S
(POP) K
() p 24 T (R3) N
() S 8 T () S 16 T () S
(POP) K
() p 24 T (R2) N
() S 8 T () S 16 T () S
(POP) K
() p 24 T (R1) N
() S 8 T () S 16 T () S
(RET) K n
() p n
(;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;) c n
(;;;;;;;;;;) N
(;;) S 8 T (- IsTrainPosAI) N
(;;) N
(;; Funcao que recebe uma posicao e devolve TRUE caso coincida com uma posicao oc) N
(upada) N
(;; pela automotora fantasma) N
(;;) N
(;; Entrad: Pilha - Posicao a verificar) N
(;; Saidas: Pilha - Predicado) N
(;; Efeito: Altera Pilha) N
(;;) N
(IsTrainPosAI:) p 16 T () S
(PUSH) K
() p 24 T (R1) N
() S 8 T () S 16 T () S
(PUSH) K
() p 24 T (R2) N
() S 8 T () S 16 T () S
(PUSH) K
() p 24 T (R3) N
() S 8 T () S 16 T () S
(MOV) K
() p 24 T (R1, Pos_Fantasma) N
() S 8 T () S 16 T () S
(MOV) K
() p 24 T (R2, AI_TRAIN_LENG) N
(IsTrainPosAI1:) S 16 T () S
(MOV) K
() p 24 T (R3, M[R1]) N
() S 8 T () S 16 T () S
(CMP) K
() p 24 T (R3, M[SP+5]) N
() S 8 T () S 16 T () S
(BR.Z) K
() p 24 T (IsTrainPosAIT) N
() S 8 T () S 16 T () S
(INC) K
() p 24 T (R1) N
() S 8 T () S 16 T () S
(DEC) K
() p 24 T (R2) N
() S 8 T () S 16 T () S
(BR.NZ) K
() p 24 T (IsTrainPosAI1) N
() S 8 T () S 16 T () S
(BR) K
() p 24 T (IsTrainPosAIF) N
(IsTrainPosAIT:) S 16 T () S
(MOV) K
() p 24 T (R3, TRUE) N
() S 8 T () S 16 T () S
(BR.Z) K
() p 24 T (IsTrainPosAIE) N
(IsTrainPosAIF:) S 16 T () S
(MOV) K
() p 24 T (R3, FALSE) N
(IsTrainPosAIE:) S 16 T () S
(MOV) K
() p 24 T (M[SP+5], R3) N
() S 8 T () S 16 T () S
(POP) K
() p 24 T (R3) N
() S 8 T () S 16 T () S
(POP) K
() p 24 T (R2) N
() S 8 T () S 16 T () S
(POP) K
() p 24 T (R1) N
() S 8 T () S 16 T () S
(RET) K n
() p n
(;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;) c n
(;;;;;;;;;;) N
(;;) S 8 T (- IsNeedlePos) N
(;;) N
(;; Funcao que recebe uma posicao e devolve TRUE caso coincida com uma posicao oc) N
(upada por) N
(;; uma agulha) N
(;;) N
(;; Entrad: Pilha - Posicao a verificar) N
(;; Saidas: Pilha - Predicado) N
(;; Efeito: Altera Pilha) N
(proj_final.as) (Page 16/37) (Mai 21, 10 6:17) title
border
grestore
(Printed by Jo\343o) rhead
(proj_final.as) (8/19) (sexta-feira Maio 21, 2010) footer
end % of iso1dict
pagesave restore
showpage
%%Page: (17-18) 9
%%BeginPageSetup
/pagesave save def
sh 0 translate 90 rotate
%%EndPageSetup
iso1dict begin
gsave
llx lly 12 add translate
/v 0 store
/x0 x v get 3.362408 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(;;) c n
(IsNeedlePos:) p 16 T () S
(PUSH) K
() p 24 T (R1) N
() S 8 T () S 16 T () S
(PUSH) K
() p 24 T (R2) N
() S 8 T () S 16 T () S
(PUSH) K
() p 24 T (R3) N
() S 8 T () S 16 T () S
(MOV) K
() p 24 T (R1, Pos_Needle0) N
() S 8 T () S 16 T () S
(MOV) K
() p 24 T (R2, NUM_NEEDLES) N
(IsNeedlePos1:) S 16 T () S
(MOV) K
() p 24 T (R3, M[R1]) N
() S 8 T () S 16 T () S
(CMP) K
() p 24 T (R3, M[SP+5]) N
() S 8 T () S 16 T () S
(BR.Z) K
() p 24 T (IsNeedlePosT) N
() S 8 T () S 16 T () S
(INC) K
() p 24 T (R1) N
() S 8 T () S 16 T () S
(DEC) K
() p 24 T (R2) N
() S 8 T () S 16 T () S
(BR.NZ) K
() p 24 T (IsNeedlePos1) N
() S 8 T () S 16 T () S
(BR) K
() p 24 T (IsNeedlePosF) N
(IsNeedlePosT:) S 16 T () S
(MOV) K
() p 24 T (R3, TRUE) N
() S 8 T () S 16 T () S
(BR.Z) K
() p 24 T (IsNeedlePosEnd) N
(IsNeedlePosF:) S 16 T () S
(MOV) K
() p 24 T (R3, FALSE) N
(IsNeedlePosEnd:) S 16 T () S
(MOV) K
() p 24 T (M[SP+5], R3) N
() S 8 T () S 16 T () S
(POP) K
() p 24 T (R3) N
() S 8 T () S 16 T () S
(POP) K
() p 24 T (R2) N
() S 8 T () S 16 T () S
(POP) K
() p 24 T (R1) N
() S 8 T () S 16 T () S
(RET) K n
() p n
(;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;) c n
(;;;;;;;;;;) N
(;;) S 8 T (- MidGame) N
(;;) N
(;; Rotina que fica em loop enquanto o jogo nao terminar. E responsavel por chama) N
(r outras) N
(;; sub-rotinas, as quais sao responsaveis pelo movimento dos comboios, deteccao ) N
(de) N
(;; colisoes, etc.) N
(;;) N
(;; Entrad: nenhuma) N
(;; Saidas: nenhuma) N
(;; Efeito: Altera Janela de Texto, Display 7 Segmentos, LEDs, Posicoes de Memori) N
(a) N
(;;) N
() p n
(MidGame:) S 16 T () S
(CMP) K
() p 24 T (M[Test_Temp], R0) N
() S 8 T () S 16 T () S
(BR.Z) K
() p 24 T (MidGame) N
() S 8 T () S 16 T () S
(MOV) K
() p 24 T (M[Test_Temp], R0) N
() S 8 T () S 16 T () S
(CALL) K
() p 24 T (RefreshNeedle) S 40 T () S
(; Actualizar Agulhas) c n
() p 8 T () S 16 T () S
(CALL) K
() p 24 T (MoveAITrain) S 40 T () S
(; Mover Automotora Fantasma) c n
() p 8 T () S 16 T () S
(CALL) K
() p 24 T (MoveUsrTrain) S 40 T () S
(; Mover Comboio do Utilizador) c n
() p 8 T () S 16 T () S
(CALL) K
() p 24 T (RefreshLeds) S 40 T () S
(; Actualizar Dificuldade de Jogo) c n
() p 8 T () S 16 T () S
(CALL) K
() p 24 T (GenPassenger) S 40 T () S
(; Gerar Novo Passageiro) c n
() p 8 T () S 16 T () S
(CALL) K
() p 24 T (CheckPassUsr) S 40 T () S
(; Verificar Passagens do Comboio Utiliza) c n
(dor) N
() p 8 T () S 16 T () S
(CALL) K
() p 24 T (CheckPassAI) S 40 T () S
(; e Automotora Fantasma nas Estacoes) c n
() p 8 T () S 16 T () S
(CALL) K
() p 24 T (RefreshScore) S 40 T () S
(; Actualizar pontuacao) c n
() p 8 T () S 16 T () S
(CMP) K
() p 24 T (M[GameOver], R0) S 40 T () S
(; Verificar Fim de Jogo) c n
() p 8 T () S 16 T () S
(BR.Z) K
() p 24 T (MidGame) N
() S 8 T () S 16 T () S
(RET) K n
() p n
(;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;) c n
(;;;;;;;;;;) N
(;;) S 8 T (- NextNeedleCar) N
(;;) N
(;; Rotina que recebe a posicao actual de uma agulha e devolve a posicao seguinte) N
(.) N
(;;) N
(;; Entrad: Pilha - Posicao Actual) N
(proj_final.as) (Page 17/37) (Mai 21, 10 6:17) title
border
/v 1 store
/x0 x v get 3.362408 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(;; Saidas: Pilha - Posicao Seguinte) c n
(;; Efeito: Altera Pilha) N
(;;) N
(NextNeedleCar:) p 16 T () S
(PUSH) K
() p 24 T (R1) N
() S 8 T () S 16 T () S
(MOV) K
() p 24 T (R1, M[SP+3]) N
(NextNeedleCar1:) S 16 T () S
(CMP) K
() p 24 T (R1, NEEDLE_CAR_V) S 48 T () S
(; | -> /) c n
() p 8 T () S 16 T () S
(BR.NZ) K
() p 24 T (NextNeedleCar2) N
() S 8 T () S 16 T () S
(MOV) K
() p 24 T (R1, NEEDLE_CAR_R) N
() S 8 T () S 16 T () S
(BR) K
() p 24 T (NextNeedleCarF) N
(NextNeedleCar2:) S 16 T () S
(CMP) K
() p 24 T (R1, NEEDLE_CAR_R) S 48 T () S
(; / -> -) c n
() p 8 T () S 16 T () S
(BR.NZ) K
() p 24 T (NextNeedleCar3) N
() S 8 T () S 16 T () S
(MOV) K
() p 24 T (R1, NEEDLE_CAR_H) N
() S 8 T () S 16 T () S
(BR) K
() p 24 T (NextNeedleCarF) N
(NextNeedleCar3:) S 16 T () S
(CMP) K
() p 24 T (R1, NEEDLE_CAR_H) S 48 T () S
(; - -> \\) c n
() p 8 T () S 16 T () S
(BR.NZ) K
() p 24 T (NextNeedleCar4) N
() S 8 T () S 16 T () S
(MOV) K
() p 24 T (R1, NEEDLE_CAR_L) N
() S 8 T () S 16 T () S
(BR) K
() p 24 T (NextNeedleCarF) N
(NextNeedleCar4:) S 16 T () S
(MOV) K
() p 24 T (R1, NEEDLE_CAR_V) S 48 T () S
(; \\ -> |) c n
(NextNeedleCarF:) p 16 T () S
(MOV) K
() p 24 T (M[SP+3], R1) N
() S 8 T () S 16 T () S
(POP) K
() p 24 T (R1) N
() S 8 T () S 16 T () S
(RET) K n
() p n
(;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;) c n
(;;;;;;;;;;) N
(;;) S 8 T (- SwitchNeedle) N
(;;) N
(;; Rotina que recebe uma posicao de uma agulha em coordenadas da janela de texto) N
( e) N
(;; muda-a para a sua permutacao seguinte.) N
(;;) N
(;; Entrad: Pilha - Posicao da Agulha a Mudar) N
(;; Saidas: nenhuma) N
(;; Efeito: Altera uma posicao da Janela de Texto) N
(;;         Altera conteudo de um endereco de memoria) N
(;;) N
(SwitchNeedle:) p 16 T () S
(PUSH) K
() p 24 T (R1) N
() S 8 T () S 16 T () S
(PUSH) K
() p 24 T (R2) N
() S 8 T () S 16 T () S
(PUSH) K
() p 24 T (R3) N
() S 8 T () S 16 T () S
(PUSH) K
() p 24 T (M[SP+5]) N
() S 8 T () S 16 T () S
(CALL) K
() p 24 T (ConvertPos) N
() S 8 T () S 16 T () S
(POP) K
() p 24 T (R1) N
() S 8 T () S 16 T () S
(MOV) K
() p 24 T (R2, M[R1]) N
() S 8 T () S 16 T () S
(PUSH) K
() p 24 T (R2) N
() S 8 T () S 16 T () S
(CALL) K
() p 24 T (NextNeedleCar) N
() S 8 T () S 16 T () S
(POP) K
() p 24 T (R2) N
() S 8 T () S 16 T () S
(MOV) K
() p 24 T (M[R1], R2) N
() S 8 T () S 16 T () S
(PUSH) K
() p 24 T (M[SP+5]) S 32 T () S
(; Posicao) c n
() p 8 T () S 16 T () S
(CALL) K
() p 24 T (IsTrainPos) N
() S 8 T () S 16 T () S
(POP) K
() p 24 T (R2) S 32 T () S
(; Predicado) c n
() p 8 T () S 16 T () S
(CMP) K
() p 24 T (R2, TRUE) N
() S 8 T () S 16 T () S
(BR.Z) K
() p 24 T (SwitchNeedleE) N
() S 8 T () S 16 T () S
(PUSH) K
() p 24 T (M[SP+5]) N
() S 8 T () S 16 T () S
(CALL) K
() p 24 T (RestorePos) N
(SwitchNeedleE:) S 16 T () S
(POP) K
() p 24 T (R3) N
() S 8 T () S 16 T () S
(POP) K
() p 24 T (R2) N
() S 8 T () S 16 T () S
(POP) K
() p 24 T (R1) N
() S 8 T () S 16 T () S
(RETN) K
() p 24 T (1) N
() N
(;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;) c n
(;;;;;;;;;;) N
(;;) S 8 T (- RefreshNeedle) N
(;;) N
(proj_final.as) (Page 18/37) (Mai 21, 10 6:17) title
border
grestore
(Printed by Jo\343o) rhead
(proj_final.as) (9/19) (sexta-feira Maio 21, 2010) footer
end % of iso1dict
pagesave restore
showpage
%%Page: (19-20) 10
%%BeginPageSetup
/pagesave save def
sh 0 translate 90 rotate
%%EndPageSetup
iso1dict begin
gsave
llx lly 12 add translate
/v 0 store
/x0 x v get 3.362408 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(;; Rotina que efectua a mudanca das agulhas para o seu proximo estado) c n
(;; ) N
(;; Entrad: nenhuma) N
(;; Saidas: nenhuma) N
(;; Efeito: Altera Janela de Texto) N
(;;         Altera vector NeedleChanged e String com a area de jogo) N
(;;) N
(RefreshNeedle:) p 16 T () S
(PUSH) K
() p 24 T (R1) N
() S 8 T () S 16 T () S
(PUSH) K
() p 24 T (R2) N
() S 8 T () S 16 T () S
(PUSH) K
() p 24 T (R3) N
() S 8 T () S 16 T () S
(PUSH) K
() p 24 T (R4) N
() S 8 T () S 16 T () S
(MOV) K
() p 24 T (R1, NeedleChanged0) N
() S 8 T () S 16 T () S
(MOV) K
() p 24 T (R2, Pos_Needle0) N
() S 8 T () S 16 T () S
(MOV) K
() p 24 T (R3, NUM_NEEDLES) N
() S 8 T () S 16 T () S
(MOV) K
() p 24 T (R4, NEEDLE_STATES) N
(RefreshNeedle1:) S 16 T () S
(CMP) K
() p 24 T (M[R1], R0) S 40 T () S 48 T () S
(; Verificar se nao e preciso mud) c n
(ar) N
() p 8 T () S 16 T () S
(BR.Z) K
() p 24 T (RefreshNeedleN) N
(RefreshNeedle2:) S 16 T () S
(CMP) K
() p 24 T (M[R1], R4) S 40 T () S 48 T () S
(; Verificar se troca 4 ou mais v) c n
(ezes) N
() p 8 T () S 16 T () S
(BR.N) K
() p 24 T (RefreshNeedle3) S 40 T () S 48 T () S
(; Caso troque, simplesmente subt) c n
(rair 4) N
() p 8 T () S 16 T () S
(SUB) K
() p 24 T (M[R1], R4) N
() S 8 T () S 16 T () S
(BR) K
() p 24 T (RefreshNeedle2) N
(RefreshNeedle3:) S 16 T () S
(PUSH) K
() p 24 T (M[R2]) N
() S 8 T () S 16 T () S
(CALL) K
() p 24 T (SwitchNeedle) S 40 T () S 48 T () S
(; Efectuar a mudanca da agulha) c n
() p 8 T () S 16 T () S
(DEC) K
() p 24 T (M[R1]) N
() S 8 T () S 16 T () S
(BR) K
() p 24 T (RefreshNeedle1) N
(RefreshNeedleN:) S 16 T () S
(INC) K
() p 24 T (R1) N
() S 8 T () S 16 T () S
(INC) K
() p 24 T (R2) N
() S 8 T () S 16 T () S
(DEC) K
() p 24 T (R3) S 32 T () S 40 T () S 48 T () S
(; Verificar se ja percorreu toda) c n
(s) N
() p 8 T () S 16 T () S
(BR.NZ) K
() p 24 T (RefreshNeedle1) N
() S 8 T () S 16 T () S
(POP) K
() p 24 T (R4) N
() S 8 T () S 16 T () S
(POP) K
() p 24 T (R3) N
() S 8 T () S 16 T () S
(POP) K
() p 24 T (R2) N
() S 8 T () S 16 T () S
(POP) K
() p 24 T (R1) N
() S 8 T () S 16 T () S
(RET) K n
() p n
(;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;) c n
(;;;;;;;;;;) N
(;;) S 8 T (- MoveUsrTrain) N
(;;) N
(;; Responsavel por deslocar o comboio do utilizador) N
(;;) N
(;; Entrad: nenhuma) N
(;; Saidas: nenhuma) N
(;; Efeito: Altera conteudo da Janela de Texto) N
(;;         Altera posicao 3 do vector ScoreCounter) N
(;;         Altera posicoes de memoria relativos a String com a Area de Jogo) N
(;;         Altera vector Pos_Comboio e posicao Dir_Comboio) N
(;;         Altera posicao GameOver) N
(;;) N
(MoveUsrTrain:) p 16 T () S
(CALL) K
() p 24 T (EraseUsrLast) S 40 T () S
(; Apagar ultima carruagem) c n
() p 8 T () S 16 T () S
(CALL) K
() p 24 T (RefreshUsrPos) S 40 T () S
(; Mover comboio para novas posicoes) c n
() p 8 T () S 16 T () S
(CALL) K
() p 24 T (WriteUsrFirst) S 40 T () S
(; Escrever locomotiva no novo sitio) c n
() p 8 T () S 16 T () S
(CALL) K
() p 24 T (CheckUsrLine) S 40 T () S
(; Verificar se muda direccao do moviment) c n
(o) N
() p 8 T () S 16 T () S
(CALL) K
() p 24 T (CheckCollision) S 40 T () S
(; Verifica colisao) c n
() p 8 T () S 16 T () S
(CALL) K
() p 24 T (CheckUsrOut) S 40 T () S
(; Verifica descarrilamento) c n
() p 8 T () S 16 T () S
(CALL) K
() p 24 T (CheckUsrCross) S 40 T () S
(; Verifica se passou por uma interseccao) c n
( valida) N
(proj_final.as) (Page 19/37) (Mai 21, 10 6:17) title
border
/v 1 store
/x0 x v get 3.362408 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
() p 8 T () S 16 T () S
(RET) K n
() p n
(;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;) c n
(;;;;;;;;;;) N
(;;) S 8 T (- CheckUsrCross) N
(;;) N
(;; Verifica se o utilizador passou por um troco de linha valida, mas nao compati) N
(vel com a) N
(;; velocidade do comboio. Exemplo: Passar por um troco '|' enquanto com velocida) N
(de) N
(;; horizontal.) N
(;;) N
(;; Entrad: nenhuma) N
(;; Saidas: nenhuma) N
(;; Efeito: Altera valor da posicao de memoria GameOver) N
(;;) N
(CheckUsrCross:) p 16 T () S
(PUSH) K
() p 24 T (R1) N
() S 8 T () S 16 T () S
(PUSH) K
() p 24 T (R2) N
() S 8 T () S 16 T () S
(PUSH) K
() p 24 T (R3) N
() S 8 T () S 16 T () S
(MOV) K
() p 24 T (R1, M[Pos_Comboio]) N
() S 8 T () S 16 T () S
(PUSH) K
() p 24 T (R1) N
() S 8 T () S 16 T () S
(CALL) K
() p 24 T (ReadPos) S 32 T () S 40 T () S 48 T () S
(; Obter troco de linha a ser pis) c n
(ada) N
() p 8 T () S 16 T () S
(POP) K
() p 24 T (R1) N
() S 8 T () S 16 T () S
(MOV) K
() p 24 T (R2, M[Dir_Comboio]) S 48 T () S
(; Velocidade do comboio) c n
(CheckUsrCrossV:) p 16 T () S
(CMP) K
() p 24 T (R1, NEEDLE_CAR_V) S 48 T () S
(; Tipo '|') c n
() p 8 T () S 16 T () S
(BR.NZ) K
() p 24 T (CheckUsrCrossH) N
() S 8 T () S 16 T () S
(AND) K
() p 24 T (R2, FF00h) S 40 T () S 48 T () S
(; Obter componente vertical) c n
() p 8 T () S 16 T () S
(BR.NZ) K
() p 24 T (CheckUsrCrossE) S 40 T () S 48 T () S
(; Se for diferente de zero, nao ) c n
(fazer nada) N
() p 8 T () S 16 T () S
(INC) K
() p 24 T (M[GameOver]) S 40 T () S 48 T () S
(; Senao, descarrilar!) c n
(CheckUsrCrossH:) p 16 T () S
(CMP) K
() p 24 T (R1, NEEDLE_CAR_H) S 48 T () S
(; Tipo '-') c n
() p 8 T () S 16 T () S
(BR.NZ) K
() p 24 T (CheckUsrCrossE) N
() S 8 T () S 16 T () S
(AND) K
() p 24 T (R2, 00FFh) S 40 T () S 48 T () S
(; Obter componente horizontal) c n
() p 8 T () S 16 T () S
(BR.NZ) K
() p 24 T (CheckUsrCrossE) S 40 T () S 48 T () S
(; Se for diferente de zero, nao ) c n
(fazer nada) N
() p 8 T () S 16 T () S
(INC) K
() p 24 T (M[GameOver]) S 40 T () S 48 T () S
(; Senao, descarrilar!) c n
(CheckUsrCrossE:) p 16 T () S
(POP) K
() p 24 T (R3) N
() S 8 T () S 16 T () S
(POP) K
() p 24 T (R2) N
() S 8 T () S 16 T () S
(POP) K
() p 24 T (R1) N
() S 8 T () S 16 T () S
(RET) K n
() p n
(;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;) c n
(;;;;;;;;;;) N
(;;) S 8 T (- CheckUsrOut) N
(;;) N
(;; Verifica se o comboio do utilizador vai descarrilar. Em caso afirmativo, colo) N
(ca o valor) N
(;; da posicao de memoria GameOver a TRUE) N
(;;) N
(;; Entrad: nenhuma) N
(;; Saidas: nenhuma) N
(;; Efeito: Altera valor da posicao de memoria GameOver) N
(;;) N
(CheckUsrOut:) p 16 T () S
(PUSH) K
() p 24 T (R1) N
() S 8 T () S 16 T () S
(PUSH) K
() p 24 T (R2) N
() S 8 T () S 16 T () S
(PUSH) K
() p 24 T (M[Pos_Comboio]) N
() S 8 T () S 16 T () S
(CALL) K
() p 24 T (ReadPos) N
() S 8 T () S 16 T () S
(CALL) K
() p 24 T (ValidLine) N
() S 8 T () S 16 T () S
(POP) K
() p 24 T (R1) N
() S 8 T () S 16 T () S
(CMP) K
() p 24 T (R1, FALSE) N
() S 8 T () S 16 T () S
(BR.NZ) K
() p 24 T (CheckUsrOutEnd) S 40 T () S
(; Caso nao descarrile, sair) c n
(proj_final.as) (Page 20/37) (Mai 21, 10 6:17) title
border
grestore
(Printed by Jo\343o) rhead
(proj_final.as) (10/19) (sexta-feira Maio 21, 2010) footer
end % of iso1dict
pagesave restore
showpage
%%Page: (21-22) 11
%%BeginPageSetup
/pagesave save def
sh 0 translate 90 rotate
%%EndPageSetup
iso1dict begin
gsave
llx lly 12 add translate
/v 0 store
/x0 x v get 3.362408 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
() p 8 T () S 16 T () S
(INC) K
() p 24 T (M[GameOver]) S 40 T () S
(; Caso descarrile, fim de jogo) c n
(CheckUsrOutEnd:) p 16 T () S
(POP) K
() p 24 T (R2) N
() S 8 T () S 16 T () S
(POP) K
() p 24 T (R1) N
() N
(;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;) c n
(;;;;;;;;;;) N
(;;) S 8 T (- CheckCollision) N
(;;) N
(;; Verifica se houve colisao do comboio do jogador com a locomotiva fantasma) N
(;;) N
(;; Entrad: nenhuma) N
(;; Saidas: nenhuma) N
(;; Efeito: Altera valor da posicao de memoria GameOver) N
(;;) N
(CheckCollision:) p 16 T () S
(PUSH) K
() p 24 T (R1) N
() S 8 T () S 16 T () S
(MOV) K
() p 24 T (R1, M[Pos_Comboio]) S 48 T () S
(; Verificar se Comboio do Utiliz) c n
(ador) N
() p 8 T () S 16 T () S
(PUSH) K
() p 24 T (R1) S 32 T () S 40 T () S 48 T () S
(; Colidiu com Automotora Fantasm) c n
(a) N
() p 8 T () S 16 T () S
(CALL) K
() p 24 T (IsTrainPosAI) N
() S 8 T () S 16 T () S
(POP) K
() p 24 T (R1) N
() S 8 T () S 16 T () S
(CMP) K
() p 24 T (R1, TRUE) N
() S 8 T () S 16 T () S
(BR.Z) K
() p 24 T (CheckCollisioT) N
() S 8 T () S 16 T () S
(MOV) K
() p 24 T (R1, M[Pos_Fantasma]) S 48 T () S
(; Verificar se Automotora Fantas) c n
(ma) N
() p 8 T () S 16 T () S
(PUSH) K
() p 24 T (R1) S 32 T () S 40 T () S 48 T () S
(; Colidiu com Comboio do Utiliza) c n
(dor) N
() p 8 T () S 16 T () S
(CALL) K
() p 24 T (IsTrainPosUsr) N
() S 8 T () S 16 T () S
(POP) K
() p 24 T (R1) N
() S 8 T () S 16 T () S
(CMP) K
() p 24 T (R1, FALSE) N
() S 8 T () S 16 T () S
(BR.Z) K
() p 24 T (CheckCollisEnd) N
(CheckCollisioT:) S 16 T () S
(INC) K
() p 24 T (M[GameOver]) N
(CheckCollisEnd:) S 16 T () S
(POP) K
() p 24 T (R1) N
() S 8 T () S 16 T () S
(RET) K n
() p n
(;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;) c n
(;;;;;;;;;;) N
(;;) S 8 T (- EraseUsrLast) N
(;;) N
(;; Apaga a ultima carruagem do comboio do utilizador da janela de texto) N
(;;) N
(;; Entrad: nenhuma) N
(;; Saidas: nenhuma) N
(;; Efeito: Altera uma posicao da Janela de Texto) N
(;;) N
(EraseUsrLast:) p 16 T () S
(PUSH) K
() p 24 T (R1) N
() S 8 T () S 16 T () S
(MOV) K
() p 24 T (R1, Pos_Comboio) N
() S 8 T () S 16 T () S
(ADD) K
() p 24 T (R1, USR_TRAIN_LENG) N
() S 8 T () S 16 T () S
(DEC) K
() p 24 T (R1) N
() S 8 T () S 16 T () S
(PUSH) K
() p 24 T (M[R1]) N
() S 8 T () S 16 T () S
(CALL) K
() p 24 T (RestorePos) N
() S 8 T () S 16 T () S
(POP) K
() p 24 T (R1) N
() S 8 T () S 16 T () S
(RET) K n
() p n
(;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;) c n
(;;;;;;;;;;) N
(;;) S 8 T (- RefreshUsrPos) N
(;;) N
(;; Actualiza as posicoes de todas as carruagens do comboio do utilizador) N
(;;) N
(;; Entrad: nenhuma) N
(;; Saidas: nenhuma) N
(proj_final.as) (Page 21/37) (Mai 21, 10 6:17) title
border
/v 1 store
/x0 x v get 3.362408 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(;; Efeito: Altera conteudo do vecto Pos_Comboio) c n
(;;) N
(RefreshUsrPos:) p 16 T () S
(PUSH) K
() p 24 T (R1) N
() S 8 T () S 16 T () S
(PUSH) K
() p 24 T (R2) N
() S 8 T () S 16 T () S
(PUSH) K
() p 24 T (R3) N
() S 8 T () S 16 T () S
(MOV) K
() p 24 T (R1, Pos_Comboio) S 40 T () S
(; Ponteiro para o vector) c n
() p 8 T () S 16 T () S
(MOV) K
() p 24 T (R2, USR_TRAIN_LENG) N
() S 8 T () S 16 T () S
(DEC) K
() p 24 T (R2) S 32 T () S 40 T () S
(; So faz n-1 trocas, n e o comprimento d) c n
(o comboio) N
() p 8 T () S 16 T () S
(ADD) K
() p 24 T (R1, R2) N
() S 8 T () S 16 T () S
(DEC) K
() p 24 T (R1) S 32 T () S 40 T () S
(; Apontar para penultima posicao) c n
(RefreshUsrPos1:) p 16 T () S
(MOV) K
() p 24 T (R3, M[R1]) N
() S 8 T () S 16 T () S
(MOV) K
() p 24 T (M[R1+1], R3) S 40 T () S
(; Trocar posicao N com N+1) c n
() p 8 T () S 16 T () S
(DEC) K
() p 24 T (R1) N
() S 8 T () S 16 T () S
(DEC) K
() p 24 T (R2) N
() S 8 T () S 16 T () S
(BR.NZ) K
() p 24 T (RefreshUsrPos1) N
() S 8 T () S 16 T () S
(MOV) K
() p 24 T (R1, M[Pos_Comboio]) S 48 T () S
(; Modificar Posicao da Locomotiv) c n
(a) N
() p 8 T () S 16 T () S
(ADD) K
() p 24 T (R1, M[Dir_Comboio]) S 48 T () S
(; \(Somar vector velocidade\)) c n
() p 8 T () S 16 T () S
(MOV) K
() p 24 T (M[Pos_Comboio], R1) N
() S 8 T () S 16 T () S
(POP) K
() p 24 T (R3) N
() S 8 T () S 16 T () S
(POP) K
() p 24 T (R2) N
() S 8 T () S 16 T () S
(POP) K
() p 24 T (R1) N
() S 8 T () S 16 T () S
(RET) K n
() p n
(;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;) c n
(;;;;;;;;;;) N
(;;) S 8 T (- WriteUsrFirst) N
(;;) N
(;; Escreve na Janela de Texto a locomotiva \(e substitui a antiga locomotiva por ) N
(uma) N
(;; carruagem normal.) N
(;;) N
(;; Entrad: nenhuma) N
(;; Saidas: nenhuma) N
(;; Efeito: Altera conteudo da Janela de Texto) N
(;;) N
(WriteUsrFirst:) p 16 T () S
(PUSH) K
() p 24 T (R1) N
() S 8 T () S 16 T () S
(PUSH) K
() p 24 T (R2) N
() S 8 T () S 16 T () S
(PUSH) K
() p 24 T (R3) N
() S 8 T () S 16 T () S
(MOV) K
() p 24 T (R1, Pos_Comboio) N
() S 8 T () S 16 T () S
(MOV) K
() p 24 T (R2, M[R1]) N
() S 8 T () S 16 T () S
(MOV) K
() p 24 T (R3, USR_TRAIN_LOC) N
() S 8 T () S 16 T () S
(MOV) K
() p 24 T (M[IO_TEXT_CTRL], R2) S 48 T () S
(; Escrever Locomotiva) c n
() p 8 T () S 16 T () S
(MOV) K
() p 24 T (M[IO_TEXT_WRITE], R3) N
() S 8 T () S 16 T () S
(MOV) K
() p 24 T (R2, M[R1+1]) N
() S 8 T () S 16 T () S
(MOV) K
() p 24 T (R3, USR_TRAIN_CAR) N
() S 8 T () S 16 T () S
(MOV) K
() p 24 T (M[IO_TEXT_CTRL], R2) S 48 T () S
(; Substituir Loc. antiga por car) c n
(ruagem) N
() p 8 T () S 16 T () S
(MOV) K
() p 24 T (M[IO_TEXT_WRITE], R3) N
() S 8 T () S 16 T () S
(POP) K
() p 24 T (R3) N
() S 8 T () S 16 T () S
(POP) K
() p 24 T (R2) N
() S 8 T () S 16 T () S
(POP) K
() p 24 T (R1) N
() S 8 T () S 16 T () S
(RET) K n
() p n
(;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;) c n
(;;;;;;;;;;) N
(;;) S 8 T (- NeedleCurveL) N
(;;) N
(;; Recebe um vector velocidade e aplica-lhe uma transformacao de forma a dar o v) N
(ector) N
(;; velocidade depois de passar por uma curva do caracter NEEDLE_CAR_L) N
(proj_final.as) (Page 22/37) (Mai 21, 10 6:17) title
border
grestore
(Printed by Jo\343o) rhead
(proj_final.as) (11/19) (sexta-feira Maio 21, 2010) footer
end % of iso1dict
pagesave restore
showpage
%%Page: (23-24) 12
%%BeginPageSetup
/pagesave save def
sh 0 translate 90 rotate
%%EndPageSetup
iso1dict begin
gsave
llx lly 12 add translate
/v 0 store
/x0 x v get 3.362408 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(;;) c n
(;; Entrad: Pilha - Vector Velocidade Actual) N
(;; Saidas: Pilha - Vector Velocidade Alterado) N
(;; Efeito: Altera conteudo da Pilha) N
(;;) N
(NeedleCurveL:) p 16 T () S
(PUSH) K
() p 24 T (R1) N
() S 8 T () S 16 T () S
(MOV) K
() p 24 T (R1, M[SP+3]) N
() S 8 T () S 16 T () S
(TEST) K
() p 24 T (R1, 8000h) S 40 T () S
(; Testar bit mais significativo) c n
() p 8 T () S 16 T () S
(BR.Z) K
() p 24 T (NeedleCurveLP) N
() S 8 T () S 16 T () S
(NEG) K
() p 24 T (R1) S 32 T () S 40 T () S
(; Caso seja 1, Complementar) c n
() p 8 T () S 16 T () S
(ROR) K
() p 24 T (R1, 8) S 32 T () S 40 T () S
(; Trocar componentes) c n
() p 8 T () S 16 T () S
(NEG) K
() p 24 T (R1) S 32 T () S 40 T () S
(; e Complementar de novo) c n
() p 8 T () S 16 T () S
(BR) K
() p 24 T (NeedleCurveLF) N
(NeedleCurveLP:) S 16 T () S
(ROR) K
() p 24 T (R1, 8) S 32 T () S 40 T () S
(; Caso seja 0, apenas trocar componentes) c n
(NeedleCurveLF:) p 16 T () S
(MOV) K
() p 24 T (M[SP+3], R1) N
() S 8 T () S 16 T () S
(POP) K
() p 24 T (R1) N
() S 8 T () S 16 T () S
(RET) K n
() p n
(;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;) c n
(;;;;;;;;;;) N
(;;) S 8 T (- NeedleCurveR) N
(;;) N
(;; Recebe um vector velocidade e aplica-lhe uma transformacao de forma a dar o v) N
(ector) N
(;; velocidade depois de passar por uma curva do caracter NEEDLE_CAR_R) N
(;;) N
(;; Entrad: Pilha - Vector Velocidade Actual) N
(;; Saidas: Pilha - Vector Velocidade Alterado) N
(;; Efeito: Altera conteudo da Pilha) N
(;;) N
(NeedleCurveR:) p 16 T () S
(PUSH) K
() p 24 T (R1) N
() S 8 T () S 16 T () S
(MOV) K
() p 24 T (R1, M[SP+3]) N
() S 8 T () S 16 T () S
(TEST) K
() p 24 T (R1, 8000h) S 40 T () S
(; Testar bit mais significativo) c n
() p 8 T () S 16 T () S
(BR.Z) K
() p 24 T (NeedleCurveR1) N
() S 8 T () S 16 T () S
(NEG) K
() p 24 T (R1) S 32 T () S 40 T () S
(; Caso seja 1, complementar) c n
() p 8 T () S 16 T () S
(ROR) K
() p 24 T (R1, 8) S 32 T () S 40 T () S
(; e trocar as componentes) c n
() p 8 T () S 16 T () S
(BR) K
() p 24 T (NeedleCurveRF) N
(NeedleCurveR1:) S 16 T () S
(ROR) K
() p 24 T (R1, 8) S 32 T () S 40 T () S
(; Caso seja 0, trocar componentes) c n
() p 8 T () S 16 T () S
(NEG) K
() p 24 T (R1) N
(NeedleCurveRF:) S 16 T () S
(MOV) K
() p 24 T (M[SP+3], R1) N
() S 8 T () S 16 T () S
(POP) K
() p 24 T (R1) N
() S 8 T () S 16 T () S
(RET) K n
() p n
(;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;) c n
(;;;;;;;;;;) N
(;;) S 8 T (- CheckUsrLine) N
(;;) N
(;; Verifica a linha a ser pisada pela locomotiva. Caso seja uma curva, muda o se) N
(ntido.) N
(;;) N
(;; Entrad: nenhuma) N
(;; Saidas: nenhuma) N
(;; Efeito: Altera posicao de memoria Pos_Comboio) N
(;;) N
(CheckUsrLine:) p 16 T () S
(PUSH) K
() p 24 T (R1) N
() S 8 T () S 16 T () S
(PUSH) K
() p 24 T (M[Pos_Comboio]) N
() S 8 T () S 16 T () S
(CALL) K
() p 24 T (ReadPos) S 32 T () S 40 T () S
(; Ler caracter por baixo da locomotiva) c n
() p 8 T () S 16 T () S
(POP) K
() p 24 T (R1) N
() S 8 T () S 16 T () S
(PUSH) K
() p 24 T (M[Dir_Comboio]) N
() S 8 T () S 16 T () S
(CMP) K
() p 24 T (R1, NEEDLE_CAR_L) S 48 T () S
(; Curva a esquerda) c n
() p 8 T () S 16 T () S
(CALL.Z) K
() p 24 T (NeedleCurveL) N
() S 8 T () S 16 T () S
(CMP) K
() p 24 T (R1, NEEDLE_CAR_R) S 48 T () S
(; Curva a direita) c n
(proj_final.as) (Page 23/37) (Mai 21, 10 6:17) title
border
/v 1 store
/x0 x v get 3.362408 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
() p 8 T () S 16 T () S
(CALL.Z) K
() p 24 T (NeedleCurveR) N
() S 8 T () S 16 T () S
(POP) K
() p 24 T (M[Dir_Comboio]) S 40 T () S 48 T () S
(; Guardar nova velocidade \(se al) c n
(terada\)) N
() p 8 T () S 16 T () S
(POP) K
() p 24 T (R1) N
() S 8 T () S 16 T () S
(RET) K n
() p n
(;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;) c n
(;;;;;;;;;;) N
(;;) S 8 T (- MoveAITrain) N
(;;) N
(;; Responsavel por deslocar a automotora fantasma) N
(;;) N
(;; Entrad: nenhuma) N
(;; Saidas: nenhuma) N
(;; Efeito: Altera conteudo da Janela de Texto) N
(;;         Altera vector Pos_Fantasma e posicao de memoria Dir_Fantasma) N
(;;) N
(MoveAITrain:) p 16 T () S
(CALL) K
() p 24 T (EraseAILast) S 40 T () S
(; Apagar ultima carruagem) c n
() p 8 T () S 16 T () S
(CALL) K
() p 24 T (CheckAILine) S 40 T () S
(; Verificar se esta numa agulha) c n
() p 8 T () S 16 T () S
(CALL) K
() p 24 T (RefreshAIPos) S 40 T () S
(; Mover automotora para novas posicoes) c n
() p 8 T () S 16 T () S
(CALL) K
() p 24 T (CheckAINextP) S 40 T () S
(; Verificar se automotora vai descarrila) c n
(r) N
() p 8 T () S 16 T () S
(CALL) K
() p 24 T (WriteAIFirst) S 40 T () S
(; Escrever locomotiva no novo sitio) c n
() p 8 T () S 16 T () S
(RET) K n
() p n
(;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;) c n
(;;;;;;;;;;) N
(;;) S 8 T (- CheckAINextP) N
(;;) N
(;; Verifica se a Automotora vai descarrilar. Em caso afirmativo, inverte o senti) N
(do do) N
(;; movimento) N
(;;) N
(;; Entrad: nenhuma) N
(;; Saidas: nenhuma) N
(;; Efeito: Altera conteudo do vector Pos_Fantasma e posicao de memoria Dir_Fanta) N
(sma) N
(;;) N
(CheckAINextP:) p 16 T () S
(PUSH) K
() p 24 T (R1) N
() S 8 T () S 16 T () S
(PUSH) K
() p 24 T (M[Pos_Fantasma]) N
() S 8 T () S 16 T () S
(CALL) K
() p 24 T (ReadPos) N
() S 8 T () S 16 T () S
(CALL) K
() p 24 T (ValidLine) N
() S 8 T () S 16 T () S
(POP) K
() p 24 T (R1) N
() S 8 T () S 16 T () S
(CMP) K
() p 24 T (R1, TRUE) N
() S 8 T () S 16 T () S
(BR.Z) K
() p 24 T (CheckAINextEnd) N
() S 8 T () S 16 T () S
(PUSH) K
() p 24 T (M[Pos_Fantasma]) N
() S 8 T () S 16 T () S
(CALL) K
() p 24 T (ReadPos) N
() S 8 T () S 16 T () S
(POP) K
() p 24 T (R1) N
() S 8 T () S 16 T () S
(CMP) K
() p 24 T (R1, NEEDLE_CAR_L) N
() S 8 T () S 16 T () S
(BR.Z) K
() p 24 T (CheckAINextEnd) N
() S 8 T () S 16 T () S
(CMP) K
() p 24 T (R1, NEEDLE_CAR_R) N
() S 8 T () S 16 T () S
(BR.Z) K
() p 24 T (CheckAINextEnd) N
() S 8 T () S 16 T () S
(CALL) K
() p 24 T (InvertAIDir) N
() S 8 T () S 16 T () S
(CALL) K
() p 24 T (RefreshAIPos) N
(CheckAINextEnd:) S 16 T () S
(POP) K
() p 24 T (R7) N
() S 8 T () S 16 T () S
(RET) K n
() p n
(;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;) c n
(;;;;;;;;;;) N
(;;) S 8 T (- InvertAIDir) N
(;;) N
(;; Inverte o sentido do movimento da automotora fantasma) N
(proj_final.as) (Page 24/37) (Mai 21, 10 6:17) title
border
grestore
(Printed by Jo\343o) rhead
(proj_final.as) (12/19) (sexta-feira Maio 21, 2010) footer
end % of iso1dict
pagesave restore
showpage
%%Page: (25-26) 13
%%BeginPageSetup
/pagesave save def
sh 0 translate 90 rotate
%%EndPageSetup
iso1dict begin
gsave
llx lly 12 add translate
/v 0 store
/x0 x v get 3.362408 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(;;) c n
(;; Entrad: nenhuma) N
(;; Saidas: nenhuma) N
(;; Efeito: Altera conteudo do vector Pos_Fantasma e posicao de memoria Dir_Fanta) N
(sma) N
(;;) N
(InvertAIDir:) p 16 T () S
(PUSH) K
() p 24 T (R1) N
() S 8 T () S 16 T () S
(PUSH) K
() p 24 T (R2) N
() S 8 T () S 16 T () S
(PUSH) K
() p 24 T (R3) N
() S 8 T () S 16 T () S
(PUSH) K
() p 24 T (R4) N
() S 8 T () S 16 T () S
(PUSH) K
() p 24 T (R5) N
() S 8 T () S 16 T () S
(PUSH) K
() p 24 T (R6) N
() S 8 T () S 16 T () S
(PUSH) K
() p 24 T (R7) N
() S 8 T () S 16 T () S
(MOV) K
() p 24 T (R1, Pos_Fantasma) N
() S 8 T () S 16 T () S
(MOV) K
() p 24 T (R2, M[R1+5]) N
() S 8 T () S 16 T () S
(MOV) K
() p 24 T (R3, M[R1+4]) N
() S 8 T () S 16 T () S
(SUB) K
() p 24 T (R2, R3) N
() S 8 T () S 16 T () S
(MOV) K
() p 24 T (M[Dir_Fantasma], R2) S 48 T () S
(; Inverter velocidade) c n
() p 8 T () S 16 T () S
(MOV) K
() p 24 T (R7, Pos_Fantasma) S 48 T () S
(; Trocar posicoes) c n
() p 8 T () S 16 T () S
(MOV) K
() p 24 T (R1, M[R7]) N
() S 8 T () S 16 T () S
(MOV) K
() p 24 T (R2, M[R7+1]) N
() S 8 T () S 16 T () S
(MOV) K
() p 24 T (R3, M[R7+2]) N
() S 8 T () S 16 T () S
(MOV) K
() p 24 T (R4, M[R7+3]) N
() S 8 T () S 16 T () S
(MOV) K
() p 24 T (R5, M[R7+4]) N
() S 8 T () S 16 T () S
(MOV) K
() p 24 T (R6, M[R7+5]) N
() S 8 T () S 16 T () S
(MOV) K
() p 24 T (M[R7], R6) N
() S 8 T () S 16 T () S
(MOV) K
() p 24 T (M[R7+1], R5) N
() S 8 T () S 16 T () S
(MOV) K
() p 24 T (M[R7+2], R4) N
() S 8 T () S 16 T () S
(MOV) K
() p 24 T (M[R7+3], R3) N
() S 8 T () S 16 T () S
(MOV) K
() p 24 T (M[R7+4], R2) N
() S 8 T () S 16 T () S
(MOV) K
() p 24 T (M[R7+5], R1) N
() S 8 T () S 16 T () S
(POP) K
() p 24 T (R7) N
() S 8 T () S 16 T () S
(POP) K
() p 24 T (R6) N
() S 8 T () S 16 T () S
(POP) K
() p 24 T (R5) N
() S 8 T () S 16 T () S
(POP) K
() p 24 T (R4) N
() S 8 T () S 16 T () S
(POP) K
() p 24 T (R3) N
() S 8 T () S 16 T () S
(POP) K
() p 24 T (R2) N
() S 8 T () S 16 T () S
(POP) K
() p 24 T (R1) N
() S 8 T () S 16 T () S
(RET) K n
() p n
(;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;) c n
(;;;;;;;;;;) N
(;;) S 8 T (- ValidLine) N
(;;) N
(;; Recebe um caracter e devolve TRUE caso seja um troco de linha, FALSE caso con) N
(trario) N
(;;) N
(;; Entrad: Pilha - Caracter a verificar) N
(;; Saidas: Pilha - Predicado) N
(;; Efeito: Altera conteudo da Pilha) N
(;;) N
(ValidLine:) p 16 T () S
(PUSH) K
() p 24 T (R1) N
() S 8 T () S 16 T () S
(PUSH) K
() p 24 T (R2) N
() S 8 T () S 16 T () S
(MOV) K
() p 24 T (R1, M[SP+4]) N
() S 8 T () S 16 T () S
(MOV) K
() p 24 T (R2, TRUE) N
(ValidLine1:) S 16 T () S
(CMP) K
() p 24 T (R1, NEEDLE_CAR_L) S 48 T () S
(; Curva a esq?) c n
() p 8 T () S 16 T () S
(BR.NZ) K
() p 24 T (ValidLine2) N
() S 8 T () S 16 T () S
(MOV) K
() p 24 T (M[SP+4], R2) N
() S 8 T () S 16 T () S
(JMP) K
() p 24 T (ValidLineEnd) N
(ValidLine2:) S 16 T () S
(CMP) K
() p 24 T (R1, NEEDLE_CAR_R) S 48 T () S
(; Curva a dir?) c n
() p 8 T () S 16 T () S
(BR.NZ) K
() p 24 T (ValidLine3) N
() S 8 T () S 16 T () S
(MOV) K
() p 24 T (M[SP+4], R2) N
(proj_final.as) (Page 25/37) (Mai 21, 10 6:17) title
border
/v 1 store
/x0 x v get 3.362408 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
() p 8 T () S 16 T () S
(BR) K
() p 24 T (ValidLineEnd) N
(ValidLine3:) S 16 T () S
(CMP) K
() p 24 T (R1, NEEDLE_CAR_V) S 48 T () S
(; Linha vertical?) c n
() p 8 T () S 16 T () S
(BR.NZ) K
() p 24 T (ValidLine4) N
() S 8 T () S 16 T () S
(MOV) K
() p 24 T (M[SP+4], R2) N
() S 8 T () S 16 T () S
(BR) K
() p 24 T (ValidLineEnd) N
(ValidLine4:) S 16 T () S
(CMP) K
() p 24 T (R1, NEEDLE_CAR_H) S 48 T () S
(; Linha horizontal?) c n
() p 8 T () S 16 T () S
(BR.NZ) K
() p 24 T (ValidLineS) N
() S 8 T () S 16 T () S
(MOV) K
() p 24 T (M[SP+4], R2) N
() S 8 T () S 16 T () S
(BR) K
() p 24 T (ValidLineEnd) N
(ValidLineS:) S 16 T () S
(CMP) K
() p 24 T (R1, STATION_CAR) S 40 T () S 48 T () S
(; Estacao?) c n
() p 8 T () S 16 T () S
(BR.NZ) K
() p 24 T (ValidLineP) N
() S 8 T () S 16 T () S
(MOV) K
() p 24 T (M[SP+4], R2) N
() S 8 T () S 16 T () S
(BR) K
() p 24 T (ValidLineEnd) N
(ValidLineP:) S 16 T () S
(CMP) K
() p 24 T (R1, STATION_PASSENG) S 48 T () S
(; Passageiro?) c n
() p 8 T () S 16 T () S
(BR.NZ) K
() p 24 T (ValidLineFalse) N
() S 8 T () S 16 T () S
(MOV) K
() p 24 T (M[SP+4], R2) N
() S 8 T () S 16 T () S
(BR) K
() p 24 T (ValidLineEnd) N
(ValidLineFalse:) S 16 T () S
(MOV) K
() p 24 T (M[SP+4], R0) S 40 T () S 48 T () S
(; R0 = False) c n
(ValidLineEnd:) p 16 T () S
(POP) K
() p 24 T (R2) N
() S 8 T () S 16 T () S
(POP) K
() p 24 T (R1) N
() S 8 T () S 16 T () S
(RET) K n
() p n
(;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;) c n
(;;;;;;;;;;) N
(;;) S 8 T (- EraseAILast) N
(;;) N
(;; Apaga a ultima carruagem da automotora fantasma, e coloca na penultima carrua) N
(gem o) N
(;; caracter da locomotiva traseira) N
(;;) N
(;; Entrad: nenhuma) N
(;; Saidas: nenhuma) N
(;; Efeito: Altera conteudo da Janela de Texto) N
(;;) N
(EraseAILast:) p 16 T () S
(PUSH) K
() p 24 T (R1) N
() S 8 T () S 16 T () S
(PUSH) K
() p 24 T (R2) N
() S 8 T () S 16 T () S
(MOV) K
() p 24 T (R1, Pos_Fantasma) N
() S 8 T () S 16 T () S
(ADD) K
() p 24 T (R1, USR_TRAIN_LENG) N
() S 8 T () S 16 T () S
(DEC) K
() p 24 T (R1) N
() S 8 T () S 16 T () S
(PUSH) K
() p 24 T (M[R1]) N
() S 8 T () S 16 T () S
(CALL) K
() p 24 T (RestorePos) N
() S 8 T () S 16 T () S
(DEC) K
() p 24 T (R1) N
() S 8 T () S 16 T () S
(MOV) K
() p 24 T (R2, M[R1]) N
() S 8 T () S 16 T () S
(MOV) K
() p 24 T (R1, AI_TRAIN_LOC) N
() S 8 T () S 16 T () S
(MOV) K
() p 24 T (M[IO_TEXT_CTRL], R2) N
() S 8 T () S 16 T () S
(MOV) K
() p 24 T (M[IO_TEXT_WRITE], R1) N
() S 8 T () S 16 T () S
(POP) K
() p 24 T (R2) N
() S 8 T () S 16 T () S
(POP) K
() p 24 T (R1) N
() S 8 T () S 16 T () S
(RET) K n
() p n
(;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;) c n
(;;;;;;;;;;) N
(;;) S 8 T (- RefreshAIPos) N
(;;) N
(;; Actualiza as posicoes de todas as carruagens da automotora fantasma) N
(;;) N
(;; Entrad: nenhuma) N
(;; Saidas: nenhuma) N
(;; Efeito: Altera conteudo do vector Pos_Fantasma) N
(RefreshAIPos:) p 16 T () S
(PUSH) K
() p 24 T (R1) N
() S 8 T () S 16 T () S
(PUSH) K
() p 24 T (R2) N
() S 8 T () S 16 T () S
(PUSH) K
() p 24 T (R3) N
(proj_final.as) (Page 26/37) (Mai 21, 10 6:17) title
border
grestore
(Printed by Jo\343o) rhead
(proj_final.as) (13/19) (sexta-feira Maio 21, 2010) footer
end % of iso1dict
pagesave restore
showpage
%%Page: (27-28) 14
%%BeginPageSetup
/pagesave save def
sh 0 translate 90 rotate
%%EndPageSetup
iso1dict begin
gsave
llx lly 12 add translate
/v 0 store
/x0 x v get 3.362408 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
() p 8 T () S 16 T () S
(MOV) K
() p 24 T (R1, Pos_Fantasma) N
() S 8 T () S 16 T () S
(MOV) K
() p 24 T (R2, AI_TRAIN_LENG) N
() S 8 T () S 16 T () S
(DEC) K
() p 24 T (R2) N
() S 8 T () S 16 T () S
(ADD) K
() p 24 T (R1, R2) N
() S 8 T () S 16 T () S
(DEC) K
() p 24 T (R1) N
(RefreshAIPos1:) S 16 T () S
(MOV) K
() p 24 T (R3, M[R1]) N
() S 8 T () S 16 T () S
(MOV) K
() p 24 T (M[R1+1], R3) N
() S 8 T () S 16 T () S
(DEC) K
() p 24 T (R1) N
() S 8 T () S 16 T () S
(DEC) K
() p 24 T (R2) N
() S 8 T () S 16 T () S
(BR.NZ) K
() p 24 T (RefreshAIPos1) N
() S 8 T () S 16 T () S
(MOV) K
() p 24 T (R1, M[Pos_Fantasma]) N
() S 8 T () S 16 T () S
(ADD) K
() p 24 T (R1, M[Dir_Fantasma]) N
() S 8 T () S 16 T () S
(MOV) K
() p 24 T (M[Pos_Fantasma], R1) N
() S 8 T () S 16 T () S
(POP) K
() p 24 T (R3) N
() S 8 T () S 16 T () S
(POP) K
() p 24 T (R2) N
() S 8 T () S 16 T () S
(POP) K
() p 24 T (R1) N
() S 8 T () S 16 T () S
(RET) K n
() p n
(;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;) c n
(;;;;;;;;;;) N
(;;) S 8 T (- WriteAIFirst) N
(;;) N
(;; Escreve na Janela de Texto a locomotiva da frente \(e substitui a locomotiva a) N
(ntiga por) N
(;; uma carruagem normal.) N
(;;) N
(;; Entrad: nenhuma) N
(;; Saidas: nenhuma) N
(;; Efeito: Altera conteudo da Janela de Texto) N
(;;) N
(WriteAIFirst:) p 16 T () S
(PUSH) K
() p 24 T (R1) N
() S 8 T () S 16 T () S
(PUSH) K
() p 24 T (R2) N
() S 8 T () S 16 T () S
(PUSH) K
() p 24 T (R3) N
() S 8 T () S 16 T () S
(MOV) K
() p 24 T (R1, Pos_Fantasma) N
() S 8 T () S 16 T () S
(MOV) K
() p 24 T (R2, M[R1]) N
() S 8 T () S 16 T () S
(MOV) K
() p 24 T (R3, AI_TRAIN_LOC) N
() S 8 T () S 16 T () S
(MOV) K
() p 24 T (M[IO_TEXT_CTRL], R2) S 48 T () S
(; Escreve nova locomotiva) c n
() p 8 T () S 16 T () S
(MOV) K
() p 24 T (M[IO_TEXT_WRITE], R3) N
() S 8 T () S 16 T () S
(MOV) K
() p 24 T (R2, M[R1+1]) N
() S 8 T () S 16 T () S
(MOV) K
() p 24 T (R3, AI_TRAIN_CAR) N
() S 8 T () S 16 T () S
(MOV) K
() p 24 T (M[IO_TEXT_CTRL], R2) S 48 T () S
(; Substitui antiga locomotiva po) c n
(r) N
() p 8 T () S 16 T () S
(MOV) K
() p 24 T (M[IO_TEXT_WRITE], R3) S 48 T () S
(; uma carruagem) c n
() p 8 T () S 16 T () S
(POP) K
() p 24 T (R3) N
() S 8 T () S 16 T () S
(POP) K
() p 24 T (R2) N
() S 8 T () S 16 T () S
(POP) K
() p 24 T (R1) N
() S 8 T () S 16 T () S
(RET) K n
() p n
(;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;) c n
(;;;;;;;;;;) N
(;;) S 8 T (- CheckAILine) N
(;;) N
(;; Verifica a linha a ser pisada pela locomotiva. Caso seja uma curva, muda o se) N
(ntido.) N
(;;) N
(;; Entrad: nenhuma) N
(;; Saidas: nenhuma) N
(;; Efeito: Altera conteudo da posicao de memoria Dir_Fantasma) N
(;;) N
(CheckAILine:) p 16 T () S
(PUSH) K
() p 24 T (R1) N
() S 8 T () S 16 T () S
(PUSH) K
() p 24 T (M[Pos_Fantasma]) S 40 T () S 48 T () S
(;) c n
() p 8 T () S 16 T () S
(CALL) K
() p 24 T (ReadPos) S 32 T () S 40 T () S 48 T () S
(; Ler posicao) c n
(proj_final.as) (Page 27/37) (Mai 21, 10 6:17) title
border
/v 1 store
/x0 x v get 3.362408 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
() p 8 T () S 16 T () S
(POP) K
() p 24 T (R1) S 32 T () S 40 T () S 48 T () S
(;) c n
(CheckAILineL:) p 16 T () S
(CMP) K
() p 24 T (R1, NEEDLE_CAR_L) N
() S 8 T () S 16 T () S
(BR.NZ) K
() p 24 T (CheckAILineR) N
() S 8 T () S 16 T () S
(PUSH) K
() p 24 T (M[Dir_Fantasma]) N
() S 8 T () S 16 T () S
(CALL) K
() p 24 T (NeedleCurveL) S 40 T () S 48 T () S
(; Curva a esquerda) c n
() p 8 T () S 16 T () S
(CALL) K
() p 24 T (CheckAICurve) N
() S 8 T () S 16 T () S
(POP) K
() p 24 T (M[Dir_Fantasma]) N
(CheckAILineR:) S 16 T () S
(CMP) K
() p 24 T (R1, NEEDLE_CAR_R) N
() S 8 T () S 16 T () S
(BR.NZ) K
() p 24 T (CheckAILineEnd) N
() S 8 T () S 16 T () S
(PUSH) K
() p 24 T (M[Dir_Fantasma]) N
() S 8 T () S 16 T () S
(CALL) K
() p 24 T (NeedleCurveR) S 40 T () S 48 T () S
(; Curva a direita) c n
() p 8 T () S 16 T () S
(CALL) K
() p 24 T (CheckAICurve) N
() S 8 T () S 16 T () S
(POP) K
() p 24 T (M[Dir_Fantasma]) N
(CheckAILineEnd:) S 16 T () S
(POP) K
() p 24 T (R1) N
() S 8 T () S 16 T () S
(RET) K n
() p n
(;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;) c n
(;;;;;;;;;;) N
(;;) S 8 T (- CheckAICurve) N
(;;) N
(;; Verifica se a automotora vai seguir um caminho valido depois de trocar de dir) N
(eccao) N
(;; numa agulha. Esta funcao e recursiva. Ira chamar-se a ela propria enquanto a ) N
(direccao) N
(;; nao for valida.) N
(;;) N
(;; Entrad: Pilha - vector velocidade) N
(;; Saidas: Pilha - vector velocidade sem descarrilar) N
(;; Efeito: Altera conteudo da Pilha) N
(;;) N
(CheckAICurve:) p 16 T () S
(PUSH) K
() p 24 T (R1) N
() S 8 T () S 16 T () S
(MOV) K
() p 24 T (R1, M[Pos_Fantasma]) S 48 T () S
(; Velocidade depois da curva) c n
() p 8 T () S 16 T () S
(ADD) K
() p 24 T (R1, M[SP+3]) N
() S 8 T () S 16 T () S
(PUSH) K
() p 24 T (R1) N
() S 8 T () S 16 T () S
(CALL) K
() p 24 T (ReadPos) S 32 T () S 40 T () S
(; Ler caracter daquela posicao) c n
() p 8 T () S 16 T () S
(CALL) K
() p 24 T (ValidLine) S 40 T () S
(; Verificar se e valida) c n
() p 8 T () S 16 T () S
(POP) K
() p 24 T (R1) S 32 T () S 40 T () S
(; Predicado se aquela posicao e valida) c n
() p 8 T () S 16 T () S
(CMP) K
() p 24 T (R1, TRUE) S 40 T () S
(; Caso seja, nao fazer nada) c n
() p 8 T () S 16 T () S
(BR.Z) K
() p 24 T (CheckAICurveOK) N
() S 8 T () S 16 T () S
(PUSH) K
() p 24 T (M[Dir_Fantasma]) S 40 T () S
(; Se chegou aqui, e porque vai descarril) c n
(ar!) N
() p 8 T () S 16 T () S
(CALL) K
() p 24 T (RandomCurve) S 40 T () S
(; Gerar uma direccao aleatoriamente) c n
() p 8 T () S 16 T () S
(CALL) K
() p 24 T (CheckAICurve) S 40 T () S
(; e verificar se esta e valida) c n
() p 8 T () S 16 T () S
(POP) K
() p 24 T (M[SP+4]) N
(CheckAICurveOK:) S 16 T () S
(POP) K
() p 24 T (R1) N
() S 8 T () S 16 T () S
(RET) K n
() p n
(;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;) c n
(;;;;;;;;;;) N
(;;) S 8 T (- RandomCurve) N
(;;) N
(;; Rotina que recebe um vector velocidade e devolve um outro vector velocidade,) N
(;; correspondente a uma mudanca de direccao a esquerda, a direita, ou nenhuma. E) N
(ste) N
(;; vector e escolhido pseudo-aleatoriamente) N
(;;) N
(;; Entrad: Pilha - vector velocidade actual) N
(;; Saidas: Pilha - vector velocidade aleatorio) N
(;; Efeito: Altera conteudo da Pilha) N
(;;) N
(RandomCurve:) p 16 T () S
(PUSH) K
() p 24 T (R1) N
() S 8 T () S 16 T () S
(PUSH) K
() p 24 T (R2) N
(proj_final.as) (Page 28/37) (Mai 21, 10 6:17) title
border
grestore
(Printed by Jo\343o) rhead
(proj_final.as) (14/19) (sexta-feira Maio 21, 2010) footer
end % of iso1dict
pagesave restore
showpage
%%Page: (29-30) 15
%%BeginPageSetup
/pagesave save def
sh 0 translate 90 rotate
%%EndPageSetup
iso1dict begin
gsave
llx lly 12 add translate
/v 0 store
/x0 x v get 3.362408 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
() p 8 T () S 16 T () S
(PUSH) K
() p 24 T (M[SP+4]) S 32 T () S 40 T () S
(; Colocar ja o vector na pilha p enviar ) c n
(as funcoes) N
() p 8 T () S 16 T () S
(CALL) K
() p 24 T (RandGen) N
() S 8 T () S 16 T () S
(MOV) K
() p 24 T (R1, M[RandNum]) N
() S 8 T () S 16 T () S
(MOV) K
() p 24 T (R2, 3) S 32 T () S 40 T () S
(; Numero de opcoes a seguir) c n
() p 8 T () S 16 T () S
(DIV) K
() p 24 T (R1, R2) S 32 T () S 40 T () S
(; R2 = {0, 1, 2}) c n
() p 8 T () S 16 T () S
(CMP) K
() p 24 T (R2, R0) S 32 T () S 40 T () S
(; 0 = Inverter Direccao \(pois ja foi inv) c n
(ertida\)) N
() p 8 T () S 16 T () S
(BR.NZ) K
() p 24 T (RandomCurveL) N
() S 8 T () S 16 T () S
(BR) K
() p 24 T (RandomCurveEnd) N
(RandomCurveL:) S 16 T () S
(CMP) K
() p 24 T (R2, 1) S 32 T () S 40 T () S
(; 1 = Curva do tipo \\) c n
() p 8 T () S 16 T () S
(BR.NZ) K
() p 24 T (RandomCurveR) N
() S 8 T () S 16 T () S
(CALL) K
() p 24 T (NeedleCurveL) N
() S 8 T () S 16 T () S
(BR) K
() p 24 T (RandomCurveEnd) N
(RandomCurveR:) S 16 T () S
(CALL) K
() p 24 T (NeedleCurveR) S 40 T () S
(; 2 = Curva do tipo /) c n
(RandomCurveEnd:) p 16 T () S
(POP) K
() p 24 T (M[SP+5]) N
() S 8 T () S 16 T () S
(POP) K
() p 24 T (R2) N
() S 8 T () S 16 T () S
(POP) K
() p 24 T (R1) N
() S 8 T () S 16 T () S
(RET) K n
() p n
(;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;) c n
(;;;;;;;;;;) N
(;;) S 8 T (- RefreshScore) N
(;;) N
(;; Soma um ponto \(a funcao e chamada em cada ciclo de jogo\), actualiza os contad) N
(ores de) N
(;; pontuacao e escreve a nova pontuacao no Display de 7 Segmentos. Impoe um limi) N
(te de) N
(;; 9999 pontos, visto apenas ter 4 digitos para guardar o resultado.) N
(;;) N
(;; Entrad: nenhuma) N
(;; Saidas: nenhuma) N
(;; Efeito: Altera conteudo do Display de 7 Segmentos) N
(;;         Altera vector ScoreCounter) N
(;;) N
(RefreshScore:) p 16 T () S
(PUSH) K
() p 24 T (R1) N
() S 8 T () S 16 T () S
(INC) K
() p 24 T (M[ScoreCounter1]) S 48 T () S
(; Somar um ponto) c n
() p 8 T () S 16 T () S
(MOV) K
() p 24 T (R1, DIGIT_OVERFLOW) N
(RefreshScore1:) S 16 T () S
(CMP) K
() p 24 T (M[ScoreCounter1], R1) S 48 T () S
(; Verificar Unidades) c n
() p 8 T () S 16 T () S
(BR.N) K
() p 24 T (RefreshScore2) N
() S 8 T () S 16 T () S
(INC) K
() p 24 T (M[ScoreCounter2]) N
() S 8 T () S 16 T () S
(SUB) K
() p 24 T (M[ScoreCounter1], R1) N
(RefreshScore2:) S 16 T () S
(CMP) K
() p 24 T (M[ScoreCounter2], R1) S 48 T () S
(; Verificar Dezenas) c n
() p 8 T () S 16 T () S
(BR.N) K
() p 24 T (RefreshScore3) N
() S 8 T () S 16 T () S
(INC) K
() p 24 T (M[ScoreCounter3]) N
() S 8 T () S 16 T () S
(SUB) K
() p 24 T (M[ScoreCounter2], R1) N
(RefreshScore3:) S 16 T () S
(CMP) K
() p 24 T (M[ScoreCounter3], R1) N
() S 8 T () S 16 T () S
(BR.N) K
() p 24 T (RefreshScore4) N
() S 8 T () S 16 T () S
(INC) K
() p 24 T (M[ScoreCounter4]) N
() S 8 T () S 16 T () S
(SUB) K
() p 24 T (M[ScoreCounter3], R1) N
(RefreshScore4:) S 16 T () S
(CMP) K
() p 24 T (M[ScoreCounter4], R1) N
() S 8 T () S 16 T () S
(BR.N) K
() p 24 T (RefreshScoreE) N
() S 8 T () S 16 T () S
(MOV) K
() p 24 T (R1, 9) S 32 T () S 40 T () S 48 T () S
(; Limitar a 9999 pontos) c n
() p 8 T () S 16 T () S
(MOV) K
() p 24 T (M[ScoreCounter1], R1) N
() S 8 T () S 16 T () S
(MOV) K
() p 24 T (M[ScoreCounter2], R1) N
() S 8 T () S 16 T () S
(MOV) K
() p 24 T (M[ScoreCounter3], R1) N
() S 8 T () S 16 T () S
(MOV) K
() p 24 T (M[ScoreCounter4], R1) N
(RefreshScoreE:) S 16 T () S
(CALL) K
() p 24 T (WriteScore) N
() S 8 T () S 16 T () S
(POP) K
() p 24 T (R1) N
() S 8 T () S 16 T () S
(RET) K n
() p n
(;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;) c n
(proj_final.as) (Page 29/37) (Mai 21, 10 6:17) title
border
/v 1 store
/x0 x v get 3.362408 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(;;;;;;;;;;) c n
(;;) S 8 T (- RefreshLeds) N
(;;) N
(;; Actualiza os LEDs de acordo com a dificuldade actual de jogo) N
(;;) N
(;; Entrad: nenhuma) N
(;; Saidas: nenhuma) N
(;; Efeito: Altera LEDs acesos) N
(;;) N
(RefreshLeds:) p 16 T () S
(PUSH) K
() p 24 T (R1) N
() S 8 T () S 16 T () S
(PUSH) K
() p 24 T (R2) N
() S 8 T () S 16 T () S
(MOV) K
() p 24 T (R1, M[IO_SWITCHES]) N
() S 8 T () S 16 T () S
(MOV) K
() p 24 T (R2, R0) N
(RefreshLeds1:) S 16 T () S
(CMP) K
() p 24 T (R1, R0) N
() S 8 T () S 16 T () S
(BR.Z) K
() p 24 T (RefreshLedsEnd) N
() S 8 T () S 16 T () S
(SHL) K
() p 24 T (R2, 1) N
() S 8 T () S 16 T () S
(INC) K
() p 24 T (R2) N
() S 8 T () S 16 T () S
(DEC) K
() p 24 T (R1) N
() S 8 T () S 16 T () S
(BR) K
() p 24 T (RefreshLeds1) N
(RefreshLedsEnd:) S 16 T () S
(MOV) K
() p 24 T (M[IO_LEDS], R2) N
() S 8 T () S 16 T () S
(POP) K
() p 24 T (R2) N
() S 8 T () S 16 T () S
(POP) K
() p 24 T (R1) N
() S 8 T () S 16 T () S
(RET) K n
() p n
(;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;) c n
(;;;;;;;;;;) N
(;;) S 8 T (- GenPassenger) N
(;;) N
(;; Rotina que verifica se e altura de gerar um novo passageiro. Em caso afirmati) N
(vo, ela) N
(;; insere o passageiro na String e na Janela de Texto. Caso a estacao escolhida ) N
(esteja) N
(;; cheia, o processo de insercao e abortado. Caso o passageiro seja inserido num) N
(a posicao) N
(;; ocupada pela locomotiva fantasma, o processo e abortado. Caso o passageiro se) N
(ja) N
(;; inserido numa posicao ocupada pelo comboio do utilizador, simplesmente soma 1) N
(00 pontos.) N
(;;) N
(;; Entrad: nenhuma) N
(;; Saidas: nenhuma) N
(;; Efeito: Altera conteudo da Janela de Texto) N
(;;         Altera conteudo do vector de Strings com a Area de Jogo) N
(;;         Altera vector ScoreCounter e Display de 7 Segmentos) N
(;;) N
(GenPassenger:) p 16 T () S
(PUSH) K
() p 24 T (R1) N
() S 8 T () S 16 T () S
(PUSH) K
() p 24 T (R2) N
() S 8 T () S 16 T () S
(PUSH) K
() p 24 T (R3) N
() S 8 T () S 16 T () S
(PUSH) K
() p 24 T (R4) N
() S 8 T () S 16 T () S
(DEC) K
() p 24 T (M[PassengerCheck]) S 48 T () S
(; Verificar se e para Inserir) c n
() p 8 T () S 16 T () S
(JMP.NZ) K
() p 24 T (GenPassengerF) S 40 T () S 48 T () S
(; Em caso negativo, nao fazer na) c n
(da) N
() p 8 T () S 16 T () S
(MOV) K
() p 24 T (R1, PASSENGER_FREQ) S 48 T () S
(; Reset contador de ciclos) c n
() p 8 T () S 16 T () S
(MOV) K
() p 24 T (M[PassengerCheck], R1) N
() S 8 T () S 16 T () S
(CALL) K
() p 24 T (RandGen) S 32 T () S 40 T () S 48 T () S
(; Gerar Numero Aleatorio) c n
() p 8 T () S 16 T () S
(MOV) K
() p 24 T (R2, M[RandNum]) N
() S 8 T () S 16 T () S
(MOV) K
() p 24 T (R1, NUM_STATIONS) N
() S 8 T () S 16 T () S
(DIV) K
() p 24 T (R2, R1) S 32 T () S 40 T () S 48 T () S
(; R1 = Numero da estacao \(aleato) c n
(rio\)) N
() p 8 T () S 16 T () S
(MOV) K
() p 24 T (R2, M[R1+Station_Pos]) S 48 T () S
(; Posicao da Estacao \(Janela Tex) c n
(to\)) N
() p 8 T () S 16 T () S
(MOV) K
() p 24 T (R3, M[R1+Station_Size]) S 48 T () S
(; Tamanho da Estacao) c n
(proj_final.as) (Page 30/37) (Mai 21, 10 6:17) title
border
grestore
(Printed by Jo\343o) rhead
(proj_final.as) (15/19) (sexta-feira Maio 21, 2010) footer
end % of iso1dict
pagesave restore
showpage
%%Page: (31-32) 16
%%BeginPageSetup
/pagesave save def
sh 0 translate 90 rotate
%%EndPageSetup
iso1dict begin
gsave
llx lly 12 add translate
/v 0 store
/x0 x v get 3.362408 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(GenPassenger1:) p 16 T () S
(PUSH) K
() p 24 T (R2) N
() S 8 T () S 16 T () S
(CALL) K
() p 24 T (ReadPos) S 32 T () S 40 T () S 48 T () S
(; Ler aquela posicao da String) c n
() p 8 T () S 16 T () S
(POP) K
() p 24 T (R4) N
() S 8 T () S 16 T () S
(CMP) K
() p 24 T (R4, STATION_CAR) S 40 T () S 48 T () S
(; Verificar se estacao esta livr) c n
(e) N
() p 8 T () S 16 T () S
(BR.Z) K
() p 24 T (GenPassengerOK) S 40 T () S 48 T () S
(; Se estiver livre, inserir pass) c n
(ageiro) N
() p 8 T () S 16 T () S
(INC) K
() p 24 T (R2) N
() S 8 T () S 16 T () S
(DEC) K
() p 24 T (R3) N
() S 8 T () S 16 T () S
(BR.NZ) K
() p 24 T (GenPassenger1) S 40 T () S 48 T () S
(; Verificar se prox posicao esta) c n
( livre) N
() p 8 T () S 16 T () S
(BR.Z) K
() p 24 T (GenPassengerF) S 40 T () S 48 T () S
(; Estacao cheia, abortar) c n
(GenPassengerOK:) p 16 T () S
(PUSH) K
() p 24 T (R2) N
() S 8 T () S 16 T () S
(CALL) K
() p 24 T (InsPassenger) N
(GenPassengerF:) S 16 T () S
(POP) K
() p 24 T (R4) N
() S 8 T () S 16 T () S
(POP) K
() p 24 T (R3) N
() S 8 T () S 16 T () S
(POP) K
() p 24 T (R2) N
() S 8 T () S 16 T () S
(POP) K
() p 24 T (R1) N
() S 8 T () S 16 T () S
(RET) K n
() p n
(;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;) c n
(;;;;;;;;;) N
(;;) S 8 T (- InsPassenger) N
(;;) N
(;; Funcao que recebe uma posicao da Janela de Texto e insere nessa posicao um pa) N
(ssageiro.) N
(;; Esta funcao evita que se escreva o passageiro por cima dos comboios.) N
(;;) N
(;; Entrad: Pilha - Posicao Janela de Texto) N
(;; Saidas: nenhuma) N
(;; Efeito: Altera conteudo da Janela de Texto) N
(;;         Altera conteudo do vector de Strings da Area de Jogo) N
(;;) N
(InsPassenger:) p 16 T () S
(PUSH) K
() p 24 T (R1) N
() S 8 T () S 16 T () S
(PUSH) K
() p 24 T (R2) N
() S 8 T () S 16 T () S
(PUSH) K
() p 24 T (R3) N
() S 8 T () S 16 T () S
(PUSH) K
() p 24 T (R4) N
() S 8 T () S 16 T () S
(PUSH) K
() p 24 T (R5) N
() S 8 T () S 16 T () S
(MOV) K
() p 24 T (R1, M[SP+7]) S 40 T () S 48 T () S
(; Posicao onde inserir passageir) c n
(o) N
(InsPassengerUs:) p 16 T () S
(PUSH) K
() p 24 T (R1) N
() S 8 T () S 16 T () S
(CALL) K
() p 24 T (IsTrainPosUsr) S 40 T () S 48 T () S
(; Verificar se esta la comboio u) c n
(tilizador) N
() p 8 T () S 16 T () S
(POP) K
() p 24 T (R2) N
() S 8 T () S 16 T () S
(CMP) K
() p 24 T (R2, R0) S 32 T () S 40 T () S 48 T () S
(; False?) c n
() p 8 T () S 16 T () S
(BR.Z) K
() p 24 T (InsPassengerAI) S 40 T () S 48 T () S
(; Caso seja falso, passar a fren) c n
(te) N
() p 8 T () S 16 T () S
(INC) K
() p 24 T (M[ScoreCounter3]) S 48 T () S
(; Caso seja verdade, aumentar 10) c n
(0 pontos) N
() p 8 T () S 16 T () S
(BR) K
() p 24 T (InsPassengerF) S 40 T () S 48 T () S
(; e nao inserir passageiro) c n
(InsPassengerAI:) p 16 T () S
(PUSH) K
() p 24 T (R1) N
() S 8 T () S 16 T () S
(CALL) K
() p 24 T (IsTrainPosAI) S 40 T () S 48 T () S
(; Verificar se esta la locomotiv) c n
(a fantasma) N
() p 8 T () S 16 T () S
(POP) K
() p 24 T (R2) N
() S 8 T () S 16 T () S
(CMP) K
() p 24 T (R2, R0) S 32 T () S 40 T () S 48 T () S
(; False?) c n
() p 8 T () S 16 T () S
(BR.NZ) K
() p 24 T (InsPassengerF) S 40 T () S 48 T () S
(; Caso seja verdade, nao fazer n) c n
(ada!) N
(InsPassengerOK:) p 16 T () S
(PUSH) K
() p 24 T (R1) S 32 T () S 40 T () S 48 T () S
(; Se chegou ate aqui, e porque e) c n
(sta livre) N
() p 8 T () S 16 T () S
(CALL) K
() p 24 T (ConvertPos) S 40 T () S 48 T () S
(; Obter endereco na String onde ) c n
(colocar) N
() p 8 T () S 16 T () S
(POP) K
() p 24 T (R2) N
(proj_final.as) (Page 31/37) (Mai 21, 10 6:17) title
border
/v 1 store
/x0 x v get 3.362408 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
() p 8 T () S 16 T () S
(MOV) K
() p 24 T (R3, STATION_PASSENG) N
() S 8 T () S 16 T () S
(MOV) K
() p 24 T (M[R2], R3) S 40 T () S 48 T () S
(; Escrever Passageiro na String) c n
() p 8 T () S 16 T () S
(PUSH) K
() p 24 T (R1) N
() S 8 T () S 16 T () S
(CALL) K
() p 24 T (RestorePos) S 40 T () S 48 T () S
(; Escrever Passageiro na Janela ) c n
(de Texto) N
(InsPassengerF:) p 16 T () S
(POP) K
() p 24 T (R5) N
() S 8 T () S 16 T () S
(POP) K
() p 24 T (R4) N
() S 8 T () S 16 T () S
(POP) K
() p 24 T (R3) N
() S 8 T () S 16 T () S
(POP) K
() p 24 T (R2) N
() S 8 T () S 16 T () S
(POP) K
() p 24 T (R1) N
() S 8 T () S 16 T () S
(RETN) K
() p 24 T (1) N
() N
(;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;) c n
(;;;;;;;;;;) N
(;;) S 8 T (- CheckPassUsr) N
(;;) N
(;; Rotina que verifica a passagem do comboio do utilizador pelas estacoes, recol) N
(hendo ) N
(;; passageiros) N
(;;) N
(;; Entrad: nenhuma) N
(;; Saidas: nenhuma) N
(;; Efeito: Altera posicao 3 do vector ScoreCounter) N
(;;         Altera vector de Strings da Area de Jogo) N
(;;) N
(CheckPassUsr:) p 16 T () S
(PUSH) K
() p 24 T (R1) N
() S 8 T () S 16 T () S
(PUSH) K
() p 24 T (R2) N
() S 8 T () S 16 T () S
(MOV) K
() p 24 T (R1, M[Pos_Comboio]) S 48 T () S
(; Posicao da locomotiva) c n
() p 8 T () S 16 T () S
(PUSH) K
() p 24 T (R1) N
() S 8 T () S 16 T () S
(CALL) K
() p 24 T (ReadPos) N
() S 8 T () S 16 T () S
(POP) K
() p 24 T (R2) S 32 T () S 40 T () S 48 T () S
(; Caracter por baixo da locomoti) c n
(va) N
() p 8 T () S 16 T () S
(CMP) K
() p 24 T (R2, STATION_PASSENG) S 48 T () S
(; Verificar se e um passageiro) c n
() p 8 T () S 16 T () S
(BR.NZ) K
() p 24 T (CheckPassUsrE) S 40 T () S 48 T () S
(; Caso nao seja, nao fazer nada) c n
() p 8 T () S 16 T () S
(PUSH) K
() p 24 T (R1) N
() S 8 T () S 16 T () S
(CALL) K
() p 24 T (ConvertPos) N
() S 8 T () S 16 T () S
(POP) K
() p 24 T (R2) S 32 T () S 40 T () S 48 T () S
(; Obter posicao da String) c n
() p 8 T () S 16 T () S
(MOV) K
() p 24 T (R1, STATION_CAR) N
() S 8 T () S 16 T () S
(MOV) K
() p 24 T (M[R2], R1) S 40 T () S 48 T () S
(; Apagar passageiro na String) c n
() p 8 T () S 16 T () S
(INC) K
() p 24 T (M[ScoreCounter3]) S 48 T () S
(; Adicionar 100 pontos) c n
(CheckPassUsrE:) p 16 T () S
(POP) K
() p 24 T (R2) N
() S 8 T () S 16 T () S
(POP) K
() p 24 T (R1) N
() S 8 T () S 16 T () S
(RET) K n
() p n
(;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;) c n
(;;;;;;;;;;) N
(;;) S 8 T (- CheckPassAI) N
(;;) N
(;; Rotina que verifica a passagem da locomotiva fantasma pelas estacoes, recolhe) N
(ndo) N
(;; passageiros.) N
(;;) N
(;; Entrad: nenhuma) N
(;; Saidas: nenhuma) N
(;; Efeito: Altera vector de Strings da Area de Jogo) N
(;;) N
(CheckPassAI:) p 16 T () S
(PUSH) K
() p 24 T (R1) N
() S 8 T () S 16 T () S
(PUSH) K
() p 24 T (R2) N
() S 8 T () S 16 T () S
(MOV) K
() p 24 T (R1, M[Pos_Fantasma]) S 48 T () S
(; Posicao da automotora) c n
() p 8 T () S 16 T () S
(PUSH) K
() p 24 T (R1) N
() S 8 T () S 16 T () S
(CALL) K
() p 24 T (ReadPos) N
() S 8 T () S 16 T () S
(POP) K
() p 24 T (R2) S 32 T () S 40 T () S 48 T () S
(; Caracter por baixo da automoto) c n
(proj_final.as) (Page 32/37) (Mai 21, 10 6:17) title
border
grestore
(Printed by Jo\343o) rhead
(proj_final.as) (16/19) (sexta-feira Maio 21, 2010) footer
end % of iso1dict
pagesave restore
showpage
%%Page: (33-34) 17
%%BeginPageSetup
/pagesave save def
sh 0 translate 90 rotate
%%EndPageSetup
iso1dict begin
gsave
llx lly 12 add translate
/v 0 store
/x0 x v get 3.362408 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(ra) c n
() p 8 T () S 16 T () S
(CMP) K
() p 24 T (R2, STATION_PASSENG) S 48 T () S
(; Verificar se e um passageiro) c n
() p 8 T () S 16 T () S
(BR.NZ) K
() p 24 T (CheckPassAIE) S 40 T () S 48 T () S
(; Caso seja, nao fazer nada) c n
() p 8 T () S 16 T () S
(PUSH) K
() p 24 T (R1) N
() S 8 T () S 16 T () S
(CALL) K
() p 24 T (ConvertPos) N
() S 8 T () S 16 T () S
(POP) K
() p 24 T (R2) S 32 T () S 40 T () S 48 T () S
(; Obter posicao da String) c n
() p 8 T () S 16 T () S
(MOV) K
() p 24 T (R1, STATION_CAR) N
() S 8 T () S 16 T () S
(MOV) K
() p 24 T (M[R2], R1) S 40 T () S 48 T () S
(; Apagar passageiro da String) c n
(CheckPassAIE:) p 16 T () S
(POP) K
() p 24 T (R2) N
() S 8 T () S 16 T () S
(POP) K
() p 24 T (R1) N
() S 8 T () S 16 T () S
(RET) K n
() p n
(;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;) c n
(;;;;;;;;;;) N
(;;) S 8 T (- ResetStations) N
(;;) N
(;; Remove todos os passageiros das estacoes e reescreve-as na Janela de Texto e ) N
(na String.) N
(;;) N
(;; Entrad: nenhuma) N
(;; Saidas: nenhuma) N
(;; Efeito: Altera conteudo da Janela de Texto) N
(;;         Altera vector de Strings da Area de Jogo) N
(;;         Altera conteudo da posicao de memoria PassengerCheck) N
(;;) N
(ResetStations:) p 16 T () S
(PUSH) K
() p 24 T (R1) N
() S 8 T () S 16 T () S
(PUSH) K
() p 24 T (R2) N
() S 8 T () S 16 T () S
(PUSH) K
() p 24 T (R3) N
() S 8 T () S 16 T () S
(PUSH) K
() p 24 T (R4) N
() S 8 T () S 16 T () S
(PUSH) K
() p 24 T (R5) N
() S 8 T () S 16 T () S
(MOV) K
() p 24 T (R1, R0) S 32 T () S
(; Numero da Estacao) c n
() p 8 T () S 16 T () S
(MOV) K
() p 24 T (R2, STATION_CAR) N
(ResetStations1:) S 16 T () S
(MOV) K
() p 24 T (R3, M[R1+Station_Pos]) S 48 T () S
(; Posicao da Estacao \(Janela de ) c n
(Texto\)) N
() p 8 T () S 16 T () S
(MOV) K
() p 24 T (R4, M[R1+Station_Size]) S 48 T () S
(; Tamanho da Estacao) c n
() p 8 T () S 16 T () S
(PUSH) K
() p 24 T (R3) N
() S 8 T () S 16 T () S
(CALL) K
() p 24 T (ConvertPos) S 40 T () S 48 T () S
(; Posicao da Estacao \(End. Strin) c n
(g\)) N
() p 8 T () S 16 T () S
(POP) K
() p 24 T (R5) N
(ResetStations2:) S 16 T () S
(MOV) K
() p 24 T (M[R5], R2) S 40 T () S 48 T () S
(; Escrever na String) c n
() p 8 T () S 16 T () S
(PUSH) K
() p 24 T (R3) N
() S 8 T () S 16 T () S
(CALL) K
() p 24 T (RestorePos) S 40 T () S 48 T () S
(; Escrever na Janela de Texto) c n
() p 8 T () S 16 T () S
(INC) K
() p 24 T (R3) N
() S 8 T () S 16 T () S
(INC) K
() p 24 T (R5) N
() S 8 T () S 16 T () S
(DEC) K
() p 24 T (R4) N
() S 8 T () S 16 T () S
(BR.NZ) K
() p 24 T (ResetStations2) S 40 T () S 48 T () S
(; Verifica se ja escreveu a esta) c n
(cao toda) N
() p 8 T () S 16 T () S
(INC) K
() p 24 T (R1) N
() S 8 T () S 16 T () S
(CMP) K
() p 24 T (R1, NUM_STATIONS) N
() S 8 T () S 16 T () S
(JMP.NZ) K
() p 24 T (ResetStations1) N
() S 8 T () S 16 T () S
(MOV) K
() p 24 T (R1, PASSENGER_FREQ) N
() S 8 T () S 16 T () S
(MOV) K
() p 24 T (M[PassengerCheck], R1) N
() S 8 T () S 16 T () S
(POP) K
() p 24 T (R5) N
() S 8 T () S 16 T () S
(POP) K
() p 24 T (R4) N
() S 8 T () S 16 T () S
(POP) K
() p 24 T (R3) N
() S 8 T () S 16 T () S
(POP) K
() p 24 T (R2) N
() S 8 T () S 16 T () S
(POP) K
() p 24 T (R1) N
() S 8 T () S 16 T () S
(RET) K n
() p n
(;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;) c n
(;;;;;;;;;;) N
(;;) S 8 T (- EndGame) N
(proj_final.as) (Page 33/37) (Mai 21, 10 6:17) title
border
/v 1 store
/x0 x v get 3.362408 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(;;) c n
(;; Chama as rotinas necessarias de forma a finalizar o jogo.) N
(;;) N
(;; Entrad: nenhuma) N
(;; Saidas: nenhuma) N
(;; Efeito: Altera conteudo da Janela de Texto, LCD, Display 7 Segmentos) N
(;;         Altera vector de Strings da Area de Jogo) N
(;;         Altera posicoes de memoria relativas a pontuacao, comboios, estacoes.) N
(;;         Altera posicao de memoria GameOver) N
(;;) N
(EndGame:) p 16 T () S
(MOV) K
() p 24 T (M[GameOver], R0) N
() S 8 T () S 16 T () S
(CALL) K
() p 24 T (CheckNewRecord) N
() S 8 T () S 16 T () S
(CALL) K
() p 24 T (WriteEndMsg) N
() S 8 T () S 16 T () S
(MOV) K
() p 24 T (R0, M[IO_TEXT_READ]) N
(EndGameWait:) S 16 T () S
(CMP) K
() p 24 T (M[IO_TEXT_STATUS], R0) N
() S 8 T () S 16 T () S
(BR.Z) K
() p 24 T (EndGameWait) N
() S 8 T () S 16 T () S
(MOV) K
() p 24 T (R1, M[IO_TEXT_READ]) N
() S 8 T () S 16 T () S
(CMP) K
() p 24 T (R1, NEW_GAME_KEY) N
() S 8 T () S 16 T () S
(BR.NZ) K
() p 24 T (EndGameWait) N
() S 8 T () S 16 T () S
(CALL) K
() p 24 T (DeleteEndMsg) N
() S 8 T () S 16 T () S
(RET) K n
() p n
(;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;) c n
(;;;;;;;;;;) N
(;;) S 8 T (- CheckNewRecord) N
(;;) N
(;; Verifica se a pontuacao actual e superior a pontuacao recorde. Caso seja, esc) N
(reve um) N
(;; novo recorde.) N
(;;) N
(;; Entrad: nenhuma) N
(;; Saidas: nenhuma) N
(;; Efeito: Altera conteudo do LCD.) N
(;;         Altera posicao de memoria RecordScore) N
(;;) N
(CheckNewRecord:) p 16 T () S
(PUSH) K
() p 24 T (R1) N
() S 8 T () S 16 T () S
(PUSH) K
() p 24 T (R2) N
() S 8 T () S 16 T () S
(MOV) K
() p 24 T (R1, M[ScoreCounter1]) N
() S 8 T () S 16 T () S
(MOV) K
() p 24 T (R2, M[ScoreCounter2]) N
() S 8 T () S 16 T () S
(SHL) K
() p 24 T (R2, 4) N
() S 8 T () S 16 T () S
(ADD) K
() p 24 T (R1, R2) N
() S 8 T () S 16 T () S
(MOV) K
() p 24 T (R2, M[ScoreCounter3]) N
() S 8 T () S 16 T () S
(SHL) K
() p 24 T (R2, 8) N
() S 8 T () S 16 T () S
(ADD) K
() p 24 T (R1, R2) N
() S 8 T () S 16 T () S
(MOV) K
() p 24 T (R2, M[ScoreCounter4]) N
() S 8 T () S 16 T () S
(SHL) K
() p 24 T (R2, 12) N
() S 8 T () S 16 T () S
(ADD) K
() p 24 T (R1, R2) N
() S 8 T () S 16 T () S
(CMP) K
() p 24 T (R1, M[RecordScore]) N
() S 8 T () S 16 T () S
(BR.NP) K
() p 24 T (CheckNewRecEnd) N
() S 8 T () S 16 T () S
(MOV) K
() p 24 T (M[RecordScore], R1) N
() S 8 T () S 16 T () S
(CALL) K
() p 24 T (WriteNewRecord) N
(CheckNewRecEnd:) S 16 T () S
(POP) K
() p 24 T (R2) N
() S 8 T () S 16 T () S
(POP) K
() p 24 T (R1) N
() N
(;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;) c n
(;;;;;;;;;;) N
(;;) S 8 T (- WriteEndMsg) N
(;;) N
(;; Escreve no ecra a mensagem de fim de jogo, ao lado da area de jogo) N
(;;) N
(;; Entrad: nenhuma) N
(;; Saidas: nenhuma) N
(proj_final.as) (Page 34/37) (Mai 21, 10 6:17) title
border
grestore
(Printed by Jo\343o) rhead
(proj_final.as) (17/19) (sexta-feira Maio 21, 2010) footer
end % of iso1dict
pagesave restore
showpage
%%Page: (35-36) 18
%%BeginPageSetup
/pagesave save def
sh 0 translate 90 rotate
%%EndPageSetup
iso1dict begin
gsave
llx lly 12 add translate
/v 0 store
/x0 x v get 3.362408 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(;; Efeito: Altera conteudo da Janela de Texto) c n
(;;) N
(WriteEndMsg:) p 16 T () S
(PUSH) K
() p 24 T (R1) N
() S 8 T () S 16 T () S
(PUSH) K
() p 24 T (R2) N
() S 8 T () S 16 T () S
(MOV) K
() p 24 T (R1, Str_NewGame_1) S 48 T () S
(; Endereco da String 1) c n
() p 8 T () S 16 T () S
(MOV) K
() p 24 T (R2, END_GAME_POS) S 48 T () S
(; Posicao onde escrever String 1) c n
() p 8 T () S 16 T () S
(PUSH) K
() p 24 T (R1) S 32 T () S 40 T () S 48 T () S
(;;;;;;;;;;;;;;;;;;;;;;;) c n
() p 8 T () S 16 T () S
(PUSH) K
() p 24 T (R2) S 32 T () S 40 T () S 48 T () S
(;; Escrever String 1 ;;) c n
() p 8 T () S 16 T () S
(CALL) K
() p 24 T (WriteStr) S 40 T () S 48 T () S
(;;;;;;;;;;;;;;;;;;;;;;;) c n
() p 8 T () S 16 T () S
(MOV) K
() p 24 T (R1, Str_NewGame_2) S 48 T () S
(; Endereco da String 2) c n
() p 8 T () S 16 T () S
(ADD) K
() p 24 T (R2, NEXT_LINE) S 40 T () S 48 T () S
(; Posicao onde escrever String 2) c n
() p 8 T () S 16 T () S
(PUSH) K
() p 24 T (R1) S 32 T () S 40 T () S 48 T () S
(;;;;;;;;;;;;;;;;;;;;;;;) c n
() p 8 T () S 16 T () S
(PUSH) K
() p 24 T (R2) S 32 T () S 40 T () S 48 T () S
(;; Escrever String 2 ;;) c n
() p 8 T () S 16 T () S
(CALL) K
() p 24 T (WriteStr) S 40 T () S 48 T () S
(;;;;;;;;;;;;;;;;;;;;;;;) c n
() p 8 T () S 16 T () S
(MOV) K
() p 24 T (R1, Str_NewGame_3) S 48 T () S
(; Endereco da String 3) c n
() p 8 T () S 16 T () S
(ADD) K
() p 24 T (R2, NEXT_LINE) S 40 T () S 48 T () S
(; Posicao onde escrever String 3) c n
() p 8 T () S 16 T () S
(PUSH) K
() p 24 T (R1) S 32 T () S 40 T () S 48 T () S
(;;;;;;;;;;;;;;;;;;;;;;;) c n
() p 8 T () S 16 T () S
(PUSH) K
() p 24 T (R2) S 32 T () S 40 T () S 48 T () S
(;; Escrever String 3 ;;) c n
() p 8 T () S 16 T () S
(CALL) K
() p 24 T (WriteStr) S 40 T () S 48 T () S
(;;;;;;;;;;;;;;;;;;;;;;;) c n
() p 8 T () S 16 T () S
(POP) K
() p 24 T (R2) N
() S 8 T () S 16 T () S
(POP) K
() p 24 T (R1) N
() S 8 T () S 16 T () S
(RET) K n
() p n
(;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;) c n
(;;;;;;;;;;) N
(;;) S 8 T (- DeleteEndMsg) N
(;;) N
(;; Apaga da Janela de Texto a mensagem de fim de jogo) N
(;;) N
(;; Entrad: nenhuma) N
(;; Saidas: nenhuma) N
(;; Efeito: Altera conteudo da Janela de Texto) N
(;;) N
(DeleteEndMsg:) p 16 T () S
(PUSH) K
() p 24 T (R1) N
() S 8 T () S 16 T () S
(PUSH) K
() p 24 T (R2) N
() S 8 T () S 16 T () S
(MOV) K
() p 24 T (R1, Str_NewGame_1) S 48 T () S
(; Endereco da String 1) c n
() p 8 T () S 16 T () S
(MOV) K
() p 24 T (R2, END_GAME_POS) S 48 T () S
(; Posicao onde apagar String 1) c n
() p 8 T () S 16 T () S
(PUSH) K
() p 24 T (R1) N
() S 8 T () S 16 T () S
(PUSH) K
() p 24 T (R2) N
() S 8 T () S 16 T () S
(CALL) K
() p 24 T (EraseStr) S 40 T () S 48 T () S
(; Apagar String 3) c n
() p 8 T () S 16 T () S
(MOV) K
() p 24 T (R1, Str_NewGame_2) S 48 T () S
(; Endereco da String 2) c n
() p 8 T () S 16 T () S
(ADD) K
() p 24 T (R2, NEXT_LINE) S 40 T () S 48 T () S
(; Posicao onde apagar String 2) c n
() p 8 T () S 16 T () S
(PUSH) K
() p 24 T (R1) N
() S 8 T () S 16 T () S
(PUSH) K
() p 24 T (R2) N
() S 8 T () S 16 T () S
(CALL) K
() p 24 T (EraseStr) S 40 T () S 48 T () S
(; Apagar String 3) c n
() p 8 T () S 16 T () S
(MOV) K
() p 24 T (R1, Str_NewGame_3) S 48 T () S
(; Endereco da String 3) c n
() p 8 T () S 16 T () S
(ADD) K
() p 24 T (R2, NEXT_LINE) S 40 T () S 48 T () S
(; Posicao onde apagar String 3) c n
() p 8 T () S 16 T () S
(PUSH) K
() p 24 T (R1) N
() S 8 T () S 16 T () S
(PUSH) K
() p 24 T (R2) N
() S 8 T () S 16 T () S
(CALL) K
() p 24 T (EraseStr) S 40 T () S 48 T () S
(; Apagar String 3) c n
() p 8 T () S 16 T () S
(POP) K
() p 24 T (R2) N
() S 8 T () S 16 T () S
(POP) K
() p 24 T (R1) N
() S 8 T () S 16 T () S
(RET) K n
() p n
(;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;) c n
(;;;;;;;;;) N
(;;) S 8 T (- WriteStr) N
(;;) N
(;; Funcao que escreve na Janela de Texto uma String. Recebe como argumento o end) N
(ereco de) N
(;; memoria do inicio da String e a posicao da Janela de Texto onde comeca a escr) N
(ever.) N
(proj_final.as) (Page 35/37) (Mai 21, 10 6:17) title
border
/v 1 store
/x0 x v get 3.362408 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(;;) c n
(;; Entrad: Pilha - Endereco da String \(Primeiro Argumento\)) N
(;;         Pilha - Posicao da Janela de Texto \(Segundo Argumento\)) N
(;; Saidas: nenhuma) N
(;; Efeito: Altera conteudo da Pilha) N
(;;         Altera conteudo da Janela de Texto) N
(;;) N
(WriteStr:) p 16 T () S
(PUSH) K
() p 24 T (R1) N
() S 8 T () S 16 T () S
(PUSH) K
() p 24 T (R2) N
() S 8 T () S 16 T () S
(PUSH) K
() p 24 T (R3) N
() S 8 T () S 16 T () S
(PUSH) K
() p 24 T (R4) N
() S 8 T () S 16 T () S
(MOV) K
() p 24 T (R1, M[SP+7]) S 40 T () S 48 T () S
(; Endereco de Memoria da String) c n
() p 8 T () S 16 T () S
(MOV) K
() p 24 T (R2, M[SP+6]) S 40 T () S 48 T () S
(; Posicao Janela de Texto) c n
() p 8 T () S 16 T () S
(MOV) K
() p 24 T (R3, END_STRING) N
(WriteStrLoop:) S 16 T () S
(MOV) K
() p 24 T (R4, M[R1]) N
() S 8 T () S 16 T () S
(CMP) K
() p 24 T (R4, R3) S 32 T () S 40 T () S 48 T () S
(; Verificar se atingiu fim da st) c n
(ring) N
() p 8 T () S 16 T () S
(BR.Z) K
() p 24 T (WriteStrEnd) S 40 T () S 48 T () S
(; Se chegou ao fim, nao escrever) c n
( mais) N
() p 8 T () S 16 T () S
(MOV) K
() p 24 T (M[IO_TEXT_CTRL], R2) S 48 T () S
(; Posicionar cursor) c n
() p 8 T () S 16 T () S
(MOV) K
() p 24 T (M[IO_TEXT_WRITE], R4) S 48 T () S
(; Escrever caracter) c n
() p 8 T () S 16 T () S
(INC) K
() p 24 T (R1) S 32 T () S 40 T () S 48 T () S
(; Proxima posicao da String) c n
() p 8 T () S 16 T () S
(INC) K
() p 24 T (R2) S 32 T () S 40 T () S 48 T () S
(; Proxima posicao na Janela de T) c n
(exto) N
() p 8 T () S 16 T () S
(BR) K
() p 24 T (WriteStrLoop) N
(WriteStrEnd:) S 16 T () S
(POP) K
() p 24 T (R4) N
() S 8 T () S 16 T () S
(POP) K
() p 24 T (R3) N
() S 8 T () S 16 T () S
(POP) K
() p 24 T (R2) N
() S 8 T () S 16 T () S
(POP) K
() p 24 T (R1) N
() S 8 T () S 16 T () S
(RETN) K
() p 24 T (2) N
() N
(;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;) c n
(;;;;;;;;;) N
(;;) S 8 T (- EraseStr) N
(;;) N
(;; Funcao que apaga da Janela de Texto uma String. Recebe como argumento o ender) N
(eco de) N
(;; memoria do inicio da String e a posicao da Janela de Texto onde comeca a apag) N
(ar.) N
(;;) N
(;; Entrad: Pilha - Endereco da String \(Primeiro Argumento\)) N
(;;         Pilha - Posicao da Janela de Texto \(Segundo Argumento\)) N
(;; Saidas: nenhuma) N
(;; Efeito: Altera conteudo da Pilha) N
(;;         Altera conteudo da Janela de Texto) N
(;;) N
(EraseStr:) p 16 T () S
(PUSH) K
() p 24 T (R1) N
() S 8 T () S 16 T () S
(PUSH) K
() p 24 T (R2) N
() S 8 T () S 16 T () S
(PUSH) K
() p 24 T (R3) N
() S 8 T () S 16 T () S
(PUSH) K
() p 24 T (R4) N
() S 8 T () S 16 T () S
(PUSH) K
() p 24 T (R5) N
() S 8 T () S 16 T () S
(MOV) K
() p 24 T (R1, M[SP+8]) S 40 T () S 48 T () S
(; Endereco de Memoria da String) c n
() p 8 T () S 16 T () S
(MOV) K
() p 24 T (R2, M[SP+7]) S 40 T () S 48 T () S
(; Posicao Janela de Texto) c n
() p 8 T () S 16 T () S
(MOV) K
() p 24 T (R3, END_STRING) N
() S 8 T () S 16 T () S
(MOV) K
() p 24 T (R4, ' ') N
(EraseStrLoop:) S 16 T () S
(MOV) K
() p 24 T (R5, M[R1]) N
() S 8 T () S 16 T () S
(CMP) K
() p 24 T (R5, R3) S 32 T () S 40 T () S 48 T () S
(; Verificar se ja apagou tudo) c n
() p 8 T () S 16 T () S
(BR.Z) K
() p 24 T (EraseStrEnd) S 40 T () S 48 T () S
(; Se apagou tudo, nao fazer mais) c n
( nada) N
() p 8 T () S 16 T () S
(MOV) K
() p 24 T (M[IO_TEXT_CTRL], R2) S 48 T () S
(; Posicionar cursor) c n
() p 8 T () S 16 T () S
(MOV) K
() p 24 T (M[IO_TEXT_WRITE], R4) S 48 T () S
(; Apagar aquela posicao) c n
() p 8 T () S 16 T () S
(INC) K
() p 24 T (R1) S 32 T () S 40 T () S 48 T () S
(; Proxima posicao na String) c n
(proj_final.as) (Page 36/37) (Mai 21, 10 6:17) title
border
grestore
(Printed by Jo\343o) rhead
(proj_final.as) (18/19) (sexta-feira Maio 21, 2010) footer
end % of iso1dict
pagesave restore
showpage
%%Page: (37) 19
%%BeginPageSetup
/pagesave save def
sh 0 translate 90 rotate
%%EndPageSetup
iso1dict begin
gsave
llx lly 12 add translate
/v 0 store
/x0 x v get 3.362408 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
() p 8 T () S 16 T () S
(INC) K
() p 24 T (R2) S 32 T () S 40 T () S 48 T () S
(; Proxima posicao na Janela de T) c n
(exto) N
() p 8 T () S 16 T () S
(BR) K
() p 24 T (EraseStrLoop) N
(EraseStrEnd:) S 16 T () S
(POP) K
() p 24 T (R5) N
() S 8 T () S 16 T () S
(POP) K
() p 24 T (R4) N
() S 8 T () S 16 T () S
(POP) K
() p 24 T (R3) N
() S 8 T () S 16 T () S
(POP) K
() p 24 T (R2) N
() S 8 T () S 16 T () S
(POP) K
() p 24 T (R1) N
() S 8 T () S 16 T () S
(RETN) K
() p 24 T (2) N
(proj_final.as) (Page 37/37) (Mai 21, 10 6:17) title
border
grestore
(Printed by Jo\343o) rhead
(proj_final.as) (19/19) (sexta-feira Maio 21, 2010) footer
end % of iso1dict
pagesave restore
showpage

%%Trailer
end
%%EOF
